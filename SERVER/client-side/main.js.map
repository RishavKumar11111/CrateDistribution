{"version":3,"sources":["./src/app/admin/admin-routing.module.ts","./src/app/aho/aho-routing.module.ts","./src/app/services/dm.service.ts","./src/app/supplier/suply-routing.module.ts","./src/app/admin/confirm-received-crates-by-aho/confirm-received-crates-by-aho.component.ts","./src/app/admin/confirm-received-crates-by-aho/confirm-received-crates-by-aho.component.html","./src/app/services/admin.service.ts","./src/environments/environment.ts","./src/app/dm/dm-routing.module.ts","./src/app/admin/confirmed-list/confirmed-list.component.ts","./src/app/admin/confirmed-list/confirmed-list.component.html","./src/app/admin/supplier/supplier-form/supplier-form.component.ts","./src/app/admin/supplier/supplier-form/supplier-form.component.html","./src/app/aho/aho.module.ts","./src/app/supplier/supplier.module.ts","./src/app/common/layout/header/header.component.ts","./src/app/common/layout/header/header.component.html","./src/app/admin/supplier/view-supplier-list/view-supplier-list.component.ts","./src/app/admin/supplier/view-supplier-list/view-supplier-list.component.html","./src/app/auth/auth.guard.ts","./src/app/common/layout/footer/footer.component.ts","./src/app/common/layout/footer/footer.component.html","./src/app/supplier/view-supply-list/view-supply-list.component.ts","./src/app/supplier/view-supply-list/view-supply-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/dm/confirm-received-crates/confirm-received-crates.component.ts","./src/app/dm/confirm-received-crates/confirm-received-crates.component.html","./src/app/services/aho.service.ts","./src/app/aho/crate-distribution/crate-distribution.component.ts","./src/app/aho/crate-distribution/crate-distribution.component.html","./src/app/app.module.ts","./src/app/admin/supplier/add-supplier/add-supplier.component.ts","./src/app/admin/supplier/add-supplier/add-supplier.component.html","./src/app/auth/login/login.component.ts","./src/app/aho/receive-crates/receive-crates.component.ts","./src/app/aho/receive-crates/receive-crates.component.html","./src/app/admin/supplier/select-blocks/select-blocks.component.ts","./src/app/admin/supplier/select-blocks/select-blocks.component.html","./src/app/dm/dm.module.ts","./src/app/admin/supplier/area-of-operation-list/area-of-operation-list.component.ts","./src/app/admin/supplier/area-of-operation-list/area-of-operation-list.component.html","./src/app/admin/admin.module.ts","./src/app/services/supplier.service.ts","./src/app/services/auth.service.ts","./src/app/dm/confirmed-list-by-dm/confirmed-list-by-dm.component.ts","./src/app/dm/confirmed-list-by-dm/confirmed-list-by-dm.component.html","./src/app/common/layout/sidebar/sidebar.component.ts","./src/app/common/layout/sidebar/sidebar.component.html","./src/app/supplier/supply-to-block/supply-to-block.component.ts","./src/app/supplier/supply-to-block/supply-to-block.component.html","./src/app/common/layout/layout.component.ts","./src/app/common/layout/layout.component.html","./src/app/app-routing.module.ts","./src/app/admin/supplier/update-supplier/update-supplier.component.ts","./src/app/admin/supplier/update-supplier/update-supplier.component.html","./src/app/admin/supplier/add-area-of-operation/add-area-of-operation.component.ts","./src/app/admin/supplier/add-area-of-operation/add-area-of-operation.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { LayoutComponent } from './../common/layout/layout.component';\nimport { AddSupplierComponent } from './supplier/add-supplier/add-supplier.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ViewSupplierListComponent } from './supplier/view-supplier-list/view-supplier-list.component';\nimport { ConfirmReceivedCratesByAhoComponent } from './confirm-received-crates-by-aho/confirm-received-crates-by-aho.component';\nimport { ConfirmedListComponent } from './confirmed-list/confirmed-list.component';\n\nconst routes: Routes = [\n  {\n    path: 'admin',\n    component: LayoutComponent,\n    children: [\n                {path:\"\",redirectTo: \"addSupplier\",pathMatch: \"full\"},\n                { path: \"addSupplier\", component: AddSupplierComponent },\n                { path: \"viewSuppliersList\", component: ViewSupplierListComponent },\n                // { path: \"updateSupplier/:userid\", component: EditSupplierDetailsComponent },\n                { path: \"confirmReceivedCratesByAho\", component: ConfirmReceivedCratesByAhoComponent },\n                { path: \"confirmedList\", component: ConfirmedListComponent }\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule\n  ]\n})\nexport class AdminRoutingModule { }\n","import { LayoutComponent } from './../common/layout/layout.component';\nimport { AuthGuard } from './../auth/auth.guard';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CrateDistributionComponent } from './crate-distribution/crate-distribution.component';\nimport { ReceiveCratesComponent } from './receive-crates/receive-crates.component';\n\nconst routes: Routes = [\n            {\n              path: 'aho',\n              component: LayoutComponent,\n              canActivate: [AuthGuard],\n              children: [\n                          { path: \"\", redirectTo: \"receiveCrates\", pathMatch: \"full\", canActivate: [AuthGuard] },\n                          { path: \"crateDistribution\", component: CrateDistributionComponent, canActivate: [AuthGuard] },\n                          { path: \"receiveCrates\", component: ReceiveCratesComponent, canActivate: [AuthGuard] }\n              ]\n            }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AhoRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { serverUrl } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DmService {\n\n\n  constructor(private http: HttpClient) { }\n\n  getBlockList(districtCode: any): Observable<any> {\n    return this.http.get(`${serverUrl}/getBlockList/${districtCode}`);\n  }\n  getFinYear(): Observable<any> {\n      return this.http.get(`${serverUrl}/api/getFinYear`);\n  }\n  getFinYearDistWiseReceivedCrateList(districtCode: string, finYear: string): Observable<any>{\n    return this.http.get(`${serverUrl}/dm/getFinYearDistWiseReceivedCrateList/${districtCode}?finYear=${finYear}`);\n  }\n  confirmReceivedCrates(lotNo: string, blockCode: string, userCode: string): Observable<any>{\n    return this.http.get(`${serverUrl}/dm/confirmReceivedCrates/${userCode}/${lotNo}/${blockCode}`);\n  }}\n","import { SupplyToBlockComponent } from './supply-to-block/supply-to-block.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LayoutComponent } from '../common/layout/layout.component';\nimport { ViewSupplyListComponent } from './view-supply-list/view-supply-list.component';\n\nconst routes: Routes = [\n          {\n            path: 'supplier',\n            component: LayoutComponent,\n            children: [\n                    { path: \"\", redirectTo: \"supplytoBlock\", pathMatch: \"full\"},\n                    { path: \"supplytoBlock\", component: SupplyToBlockComponent},\n                    { path: \"viewSupplyList\", component: ViewSupplyListComponent},\n            ]\n          } \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SupplierRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ToastrService } from 'ngx-toastr';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-confirm-received-crates-by-aho',\n  templateUrl: './confirm-received-crates-by-aho.component.html',\n  styleUrls: ['./confirm-received-crates-by-aho.component.css']\n})\nexport class ConfirmReceivedCratesByAhoComponent implements OnInit {\n\n  constructor(\n    private service: AdminService,\n    private toastr: ToastrService\n  ) { }\n  confirmForm: any;\n  selectedBlock: any;\n  blockList: any;\n  finYearList: any;\n  finYear: any;\n  noFoundFilterValue: any;\n  receivedCrateList: any;\n  displayedColumns: string[] = ['slNo', 'blockName', 'workOrderNo', 'lotNo', 'firmName', 'rDate', 'daysGap', 'rQuantity', 'ahoRemark', 'confirm'];\n  @ViewChild(MatSort) sort: any;\n  @ViewChild(MatPaginator) paginator: any;\n  selectedDistrict: any;\n  districtList: any;\n\n  ngOnInit(): void {\n    this.receivedCrateList = new MatTableDataSource([]);\n    this.finYear = '';\n    this.selectedBlock = '';\n    this.noFoundFilterValue = '';\n    this.selectedDistrict = '';\n    this.districtList = [];\n    this.blockList = [];\n    this.loadFinYear();\n    this.loadDistrictList();\n  }\n  loadFinYear() {\n    this.service.getFinYear().subscribe(result => {\n          this.finYearList = result;\n          this.finYear = result[0];\n    }, error => this.toastr.error(error.statusText, error.status) );\n  }  \n  loadDistrictList() {\n    this.service.getDistrictList().subscribe((result: any) => {\n        this.districtList = result;\n    }, error => this.toastr.error(error.statusText, error.status));\n  }  \n  loadBlockList() {\n    this.service.getBlockList(this.selectedDistrict.districtCode).subscribe((result: any) => {\n      this.blockList = result;\n      this.blockList.push( { blockName: \"All\", blockCode: '' } )\n      this.selectedBlock = this.blockList[this.blockList.length - 1];\n    }, error => this.toastr.error(error.statusText, error.status));\n  }\n  loadReceivedCrateList() {\n        this.service.getFinYearDistWiseReceivedCrateList(this.selectedDistrict.districtCode, this.finYear).subscribe(result => {\n              this.receivedCrateList.data = result; \n              console.log(result);             \n        }, error => this.toastr.error(error.statusText, error.status))\n  }\n  confirm(x: any) {\n        this.service.confirmReceivedCrates(x.lotNo, x.blockCode, this.selectedDistrict.districtCode).subscribe(result => {\n              this.toastr.success(result.message);\n              this.loadReceivedCrateList();\n        }, error => this.toastr.error(error.statusText, error.status))\n  }\n  applyFilterBlockWise() {\n    this.receivedCrateList.filter = this.selectedBlock.blockCode.trim().toLowerCase();\n    this.noFoundFilterValue = this.selectedBlock.blockName;\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.receivedCrateList.filter = filterValue.trim().toLowerCase();\n    this.noFoundFilterValue = filterValue;\n  }\n\n}\n","<section>\n    <div class=\"container-fluid\">\n        <mat-card class=\"mat-elevation-z5\">\n            <mat-card-header color=\"primary\">\n                <mat-card-title>Select district and block</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-4\">\n                        <label for=\"finYear \">Financial year <span class=\"asterisk-mark\">*</span>:</label>\n                        <select class=\"form-control\" id=\"finYear\" [(ngModel)]=\"finYear\" >\n                            <option value=\"\" disabled selected>--Select--</option>\n                            <option *ngFor='let x of finYearList' [ngValue]=\"x\">{{ x }}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <label for=\"district\"> District <span class=\"asterisk-mark\">*</span>:</label>\n                        <select class=\"form-control\" id=\"district\" [(ngModel)]=\"selectedDistrict\" (change)=\"loadBlockList();loadReceivedCrateList();\">\n                            <option value=\"\" disabled selected>--Select--</option>\n                            <option *ngFor=\"let x of districtList\" [ngValue]=\"x\">{{x.districtName}}\n                            </option>\n                        </select>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <label for=\"block\"> Block <span class=\"asterisk-mark\">*</span>:</label>\n                        <select class=\"form-control\" id=\"block\" [(ngModel)]=\"selectedBlock\" (change)=\"applyFilterBlockWise()\">\n                            <option value=\"\" disabled selected>--Select--</option>\n                            <option *ngFor=\"let x of blockList\" [ngValue]=\"x\">{{x.blockName}}\n                            </option>\n                        </select>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n        <mat-card class=\"mat-elevation-z5\" *ngIf=\"selectedDistrict\">\n            <mat-card-header color=\"primary\">\n                <mat-card-title>Crate list to confirm</mat-card-title>\n                <input class=\"float-right search-box form-control\" (keyup)=\"applyFilter($event)\" matInput placeholder=\"Filter\" #input>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"text-center\" *ngIf=\"receivedCrateList.data.length === 0\" style=\"padding: 30px;\">\n                    <strong style=\"color: red;font-size: large;padding: 10px;\">No data found</strong>\n                </div>\n                <div *ngIf=\"receivedCrateList.data.length !== 0\">\n                    <table mat-table [dataSource]=\"receivedCrateList\" matSort>\n                        <ng-container matColumnDef=\"slNo\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> SL.</th>\n                            <td mat-cell *matCellDef=\"let element; let i = index;\"> \n                                {{ (paginatorRef.pageIndex * paginatorRef.pageSize) + (i + 1) }}\n                            </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"blockName\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Block </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.blockName}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"workOrderNo\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Work-order no. </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.workOrderNo}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"lotNo\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Item quantity </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.lotNo}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"firmName\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Firm name </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.firmName}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"rDate\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Received date </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.receivedOn | date: 'dd-MM-yyyy'}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"daysGap\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Days gap </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.daysGap }} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"rQuantity\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Received quantity</th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.receivedQuantity}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"ahoRemark\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> AHO - remark </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.remark}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"confirm\">\n                            <th mat-header-cell *matHeaderCellDef>Action </th>\n                            <td mat-cell *matCellDef=\"let element\"> \n                                <button mat-raised-button class=\"btn btn-primary\" (click)=\"confirm(element);\"> <i class=\"fas fa-check\" aria-hidden=\"true\"></i> Forced confirmation </button>\n                             </td>\n                        </ng-container>\n                    \n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                        <tr class=\"mat-row\" *matNoDataRow>\n                            <td class=\"mat-cell no-record-mat-table\" colspan=\"4\">No data matching the filter \"{{noFoundFilterValue}}\"</td>\n                          </tr>\n                    </table>\n                    <mat-paginator #paginatorRef [pageSizeOptions]=\"[5, 10, 25]\" showFirstLastButtons></mat-paginator>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</section>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { serverUrl } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private http: HttpClient) { }\n\n  addSupplier(data: any): Observable<any> {\n    return this.http.post(`${serverUrl}/admin/addSuplier`, data);\n  }\n  getSuplierlist(): Observable<any> {\n    return this.http.get(`${serverUrl}/admin/getSupplierlist`);\n  }\n  deleteSuplier(workOrderNo: string): Observable<any> {\n    return this.http.delete(`${serverUrl}/admin/deletesupplierData/${workOrderNo}`);\n  }\n  getDistrictList(): Observable<any> {\n      return this.http.get(`${serverUrl}/getDistrictList`);\n  }\n  getBlockList(id: any): Observable<any> {\n    return this.http.get(`${serverUrl}/getBlockList/${id}`);\n  }\n  getFinYear(): Observable<any> {\n      return this.http.get(`${serverUrl}/api/getFinYear`);\n  }\n  getFinYearDistWiseReceivedCrateList(districtCode: string, finYear: string): Observable<any>{\n    return this.http.get(`${serverUrl}/admin/getFinYearDistWiseReceivedCrateList/${districtCode}?finYear=${finYear}`);\n  }\n  confirmReceivedCrates(lotNo: string, blockCode: string, userCode: string): Observable<any>{\n    return this.http.get(`${serverUrl}/admin/confirmReceivedCrates/${userCode}/${lotNo}/${blockCode}`);\n  }\n  getSupplierDetails(supplierId: string): Observable<any>{\n    return this.http.get(`${serverUrl}/admin/getSupplierDetails/${supplierId}`);\n  }\n  updateSupplierDetails(supplierId: string, data: any): Observable<any> {\n    return this.http.put(`${serverUrl}/admin/updateSupplierDetails/${supplierId}`, data);\n  }\n  checkWONoDuplicate(woNo: string): Observable<any>  {\n    return this.http.get(`${serverUrl}/admin/checkWONoDuplicate/${woNo}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\nexport const serverUrl = `http://localhost:3004`;\n// export const serverUrl = ``;\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { LayoutComponent } from './../common/layout/layout.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ConfirmReceivedCratesComponent } from './confirm-received-crates/confirm-received-crates.component';\nimport { ConfirmedListComponent } from '../admin/confirmed-list/confirmed-list.component';\nimport { AuthGuard } from '../auth/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'dm',\n    component: LayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n                { path:\"\",redirectTo: \"confirmReceivedCrates\",pathMatch: \"full\"},\n                { path: \"confirmReceivedCrates\", canActivate: [AuthGuard], component: ConfirmReceivedCratesComponent },\n                { path: \"confirmedListByDm\", canActivate: [AuthGuard], component: ConfirmedListComponent }\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule\n  ]\n})\nexport class DmRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirmed-list',\n  templateUrl: './confirmed-list.component.html',\n  styleUrls: ['./confirmed-list.component.css']\n})\nexport class ConfirmedListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>confirmed-list works!</p>\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-supplier-form',\n  templateUrl: './supplier-form.component.html',\n  styleUrls: ['./supplier-form.component.css']\n})\nexport class SupplierFormComponent implements OnInit {\n\n  constructor(\n    private service: AdminService,\n    private toastr: ToastrService\n  ) { }\n\n  @Input() supplierForm: any;\n  @ViewChild('supplierFormId') el: any;\n  isDuplicateWONo: any;\n\n  ngOnInit(): void {\n    this.isDuplicateWONo = false;\n  }\n  checkWorkOrderExistance() {\n    if(this.workOrderNo.value == '') {\n            this.isDuplicateWONo = false;\n    } else {\n      this.service.checkWONoDuplicate(this.workOrderNo.value).subscribe(result => {\n        this.isDuplicateWONo = result.status;\n      }, error => this.toastr.error(error.statusText, error.status));\n            \n    }\n  }\n\n  get panNo() { return this.supplierForm.get('panNo'); }\n  get mobileNo() { return this.supplierForm.get('mobileNo'); }\n  get workOrderNo() { return this.supplierForm.get('workOrderNo'); }\n  get firmName() { return this.supplierForm.get('firmName'); }\n  get emailId() { return this.supplierForm.get('emailId'); }\n  get itemQuantity() { return this.supplierForm.get('itemQuantity'); }\n  get GSTN() { return this.supplierForm.get('GSTN'); }\n\n\n}\n","<form [formGroup]=\"supplierForm\" #supplierFormId>\n    <div class=\"row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"workOrderNo\">Work-order number <span color=\"warn\" class=\"asterisk-mark\">*</span>:</label>\n            <input type=\"text\" class=\"form-control\" id=\"workOrderNo\" name=\"workOrderNo\" (keyup)=\"checkWorkOrderExistance()\"\n                placeholder=\"Enter work-order number of supplier\" formControlName='workOrderNo'>\n                <span class='alert alert-danger' *ngIf='isDuplicateWONo'> \n                    <span >This work-order number already exist.</span>\n                </span>\n                <div *ngIf=\"workOrderNo.invalid && (workOrderNo.dirty || workOrderNo.touched)\" class=\"alert alert-danger\">\n                    <div *ngIf=\"workOrderNo.errors.required\">\n                        Work-order number is required.\n                    </div>\n                </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label for=\"itemQuantity\">Item quantity <span class=\"asterisk-mark\">*</span>:</label>\n            <input type=\"number\" class=\"form-control\" id=\"itemQuantity\" name=\"itemQuantity\"\n                placeholder=\"Enter crate quantity \" formControlName='itemQuantity'>\n                \n                <div *ngIf=\"itemQuantity.invalid && (itemQuantity.dirty || itemQuantity.touched)\" class=\"alert alert-danger\">\n                    <div *ngIf=\"itemQuantity.errors.required\">\n                        Minimum quantity is required.\n                    </div>\n                </div>\n        </div>\n\n    </div>\n    <div class=\"row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"firmName\">Firm name <span class=\"asterisk-mark\">*</span>:</label>\n            <input type=\"text\" class=\"form-control\" id=\"firmName\" placeholder=\"Enter firm name of supplier\"\n                formControlName='firmName'>\n\n                <div *ngIf=\"firmName.invalid && (firmName.dirty || firmName.touched)\" class=\"alert alert-danger\">\n                    <div *ngIf=\"firmName.errors.required\">\n                        Firm name is required.\n                    </div>\n                </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label for=\"emailId\"> Email <span class=\"asterisk-mark\">*</span>:</label>\n            <input type=\"email\" class=\"form-control\" id=\"emailId\" placeholder=\"Enter email-id of supplier\" formControlName='emailId'>\n                <div *ngIf=\"emailId.invalid && (emailId.dirty || emailId.touched)\" class=\"alert alert-danger\">\n                    <div *ngIf=\"emailId.errors.required\">\n                        Email-ID is required.\n                    </div>\n                </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"panNo\">PAN number <span class=\"asterisk-mark\">*</span>:</label>\n            <input id=\"panNo\" class=\"form-control\" type=\"text\" placeholder=\"Enter pan number of supplier\"\n                                formControlName=\"panNo\" required >\n                            <div *ngIf=\"panNo.invalid && (panNo.dirty || panNo.touched)\" class=\"alert alert-danger\">\n                                    <div *ngIf=\"panNo.errors.required\">\n                                        PAN number is required.\n                                    </div>\n                                    <div *ngIf=\"panNo.errors.pattern\">\n                                        PAN number must be numeric value.\n                                    </div>\n                            </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label for=\"mobileNo\">Mobile number <span class=\"asterisk-mark\">*</span>:</label>\n            <input type=\"text\" class=\"form-control\" id=\"mobileNo\" placeholder=\"Enter mobile number of supplier\" formControlName='mobileNo'>\n                <div *ngIf=\"mobileNo.invalid && (mobileNo.dirty || mobileNo.touched)\" class=\"alert alert-danger\">\n                    <div *ngIf=\"mobileNo.errors.required\">\n                        Mobile number is required.\n                    </div>\n                    <div *ngIf=\"mobileNo.errors.pattern\">\n                        Mobile number must be numeric value.\n                    </div>\n                    <div *ngIf=\"mobileNo.errors.minlength\">\n                        Mobile number must be at least 10 characters long.\n                    </div>\n                    <div *ngIf=\"mobileNo.errors.maxlength\">\n                        Mobile number must be at least 10 characters long.\n                    </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"GSTN\"> GSTN <span class=\"asterisk-mark\">*</span>:</label>\n            <input type=\"text\" class=\"form-control\" id=\"GSTN\" placeholder=\"Enter GSTN of supplier\"\n                formControlName='GSTN'>\n                <div *ngIf=\"GSTN.invalid && (GSTN.dirty || GSTN.touched)\" class=\"alert alert-danger\">\n                    <div *ngIf=\"GSTN.errors.required\">\n                        GSTN number is required.\n                    </div>\n                </div>\n        </div>\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReceiveCratesComponent } from './receive-crates/receive-crates.component';\nimport { CrateDistributionComponent } from './crate-distribution/crate-distribution.component';\nimport { AhoRoutingModule } from './aho-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRadioModule } from '@angular/material/radio';\n\n@NgModule({\n  declarations: [ReceiveCratesComponent, CrateDistributionComponent],\n  imports: [\n    CommonModule,\n    AhoRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatIconModule,\n    MatRadioModule\n  ]\n})\nexport class AhoModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SupplyToBlockComponent } from './supply-to-block/supply-to-block.component';\nimport { ViewSupplyListComponent } from './view-supply-list/view-supply-list.component';\nimport { SupplierRoutingModule } from './suply-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\n\n\n\n@NgModule({\n  declarations: [SupplyToBlockComponent, ViewSupplyListComponent],\n  imports: [\n    CommonModule,\n    SupplierRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatIconModule\n  ]\n})\nexport class SupplierModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n  logout() {\n      this.authService.logout();\n  }\n\n}\n","<header class=\"header\">\n    <nav class=\"navbar\">\n      <div class=\"container-fluid\">\n        <div class=\"navbar-holder d-flex align-items-center justify-content-between\">\n          <div class=\"navbar-header\"><a id=\"toggle-btn\" href=\"#\" class=\"menu-btn\"><i class=\"icon-bars\"> </i></a><a href=\"index.html\" class=\"navbar-brand\">\n              <div class=\"brand-text d-none d-md-inline-block\"><span> </span><strong class=\"text-primary\">Crate Distribution Management System</strong></div></a></div>\n          <ul class=\"nav-menu list-unstyled d-flex flex-md-row align-items-md-center\">\n            <!-- Notifications dropdown-->\n            <li class=\"nav-item dropdown\"> <a id=\"notifications\" rel=\"nofollow\" data-target=\"#\" href=\"#\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" class=\"nav-link\"><i class=\"fa fa-bell\"></i><span class=\"badge badge-warning\">12</span></a>\n              <!-- <ul aria-labelledby=\"notifications\" class=\"dropdown-menu\">\n                <li><a rel=\"nofollow\" href=\"#\" class=\"dropdown-item\"> \n                    <div class=\"notification d-flex justify-content-between\">\n                      <div class=\"notification-content\"><i class=\"fa fa-envelope\"></i>You have 6 new messages </div>\n                      <div class=\"notification-time\"><small>4 minutes ago</small></div>\n                    </div></a></li>\n                <li><a rel=\"nofollow\" href=\"#\" class=\"dropdown-item\"> \n                    <div class=\"notification d-flex justify-content-between\">\n                      <div class=\"notification-content\"><i class=\"fa fa-twitter\"></i>You have 2 followers</div>\n                      <div class=\"notification-time\"><small>4 minutes ago</small></div>\n                    </div></a></li>\n                <li><a rel=\"nofollow\" href=\"#\" class=\"dropdown-item\"> \n                    <div class=\"notification d-flex justify-content-between\">\n                      <div class=\"notification-content\"><i class=\"fa fa-upload\"></i>Server Rebooted</div>\n                      <div class=\"notification-time\"><small>4 minutes ago</small></div>\n                    </div></a></li>\n                <li><a rel=\"nofollow\" href=\"#\" class=\"dropdown-item\"> \n                    <div class=\"notification d-flex justify-content-between\">\n                      <div class=\"notification-content\"><i class=\"fa fa-twitter\"></i>You have 2 followers</div>\n                      <div class=\"notification-time\"><small>10 minutes ago</small></div>\n                    </div></a></li>\n                <li><a rel=\"nofollow\" href=\"#\" class=\"dropdown-item all-notifications text-center\"> <strong> <i class=\"fa fa-bell\"></i>view all notifications                                            </strong></a></li>\n              </ul> -->\n            </li>\n            <!-- Messages dropdown-->\n            <li class=\"nav-item dropdown\"> <a id=\"messages\" rel=\"nofollow\" data-target=\"#\" href=\"#\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" class=\"nav-link\"><i class=\"fa fa-envelope\"></i><span class=\"badge badge-info\">10</span></a>\n              <!-- <ul aria-labelledby=\"notifications\" class=\"dropdown-menu\">\n                <li><a rel=\"nofollow\" href=\"#\" class=\"dropdown-item d-flex\"> \n                    <div class=\"msg-profile\"> <img src=\"#\" alt=\"...\" class=\"img-fluid rounded-circle\"></div>\n                    <div class=\"msg-body\">\n                      <h3 class=\"h5\">Jason Doe</h3><span>sent you a direct message</span><small>3 days ago at 7:58 pm - 10.06.2014</small>\n                    </div></a></li>\n                <li><a rel=\"nofollow\" href=\"#\" class=\"dropdown-item d-flex\"> \n                    <div class=\"msg-profile\"> <img src=\"#\" alt=\"...\" class=\"img-fluid rounded-circle\"></div>\n                    <div class=\"msg-body\">\n                      <h3 class=\"h5\">Frank Williams</h3><span>sent you a direct message</span><small>3 days ago at 7:58 pm - 10.06.2014</small>\n                    </div></a></li>\n                <li><a rel=\"nofollow\" href=\"#\" class=\"dropdown-item d-flex\"> \n                    <div class=\"msg-profile\"> <img src=\"#\" alt=\"...\" class=\"img-fluid rounded-circle\"></div>\n                    <div class=\"msg-body\">\n                      <h3 class=\"h5\">Ashley Wood</h3><span>sent you a direct message</span><small>3 days ago at 7:58 pm - 10.06.2014</small>\n                    </div></a></li>\n                <li><a rel=\"nofollow\" href=\"#\" class=\"dropdown-item all-notifications text-center\"> <strong> <i class=\"fa fa-envelope\"></i>Read all messages    </strong></a></li>\n              </ul> -->\n            </li>\n            <!-- Log out-->\n            <li class=\"nav-item\"><a (click)=\"logout();\" class=\"nav-link logout\"> <span class=\"d-none d-sm-inline-block\">Change password</span><i class=\"fa fa-lock\" aria-hidden=\"true\"></i></a></li>\n            <li class=\"nav-item\"><a (click)=\"logout();\"  class=\"nav-link logout\"> <span class=\"d-none d-sm-inline-block\">Logout</span><i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i></a></li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  </header>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ToastrService } from 'ngx-toastr';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-view-supplier-list',\n  templateUrl: './view-supplier-list.component.html',\n  styleUrls: ['./view-supplier-list.component.css']\n})\nexport class ViewSupplierListComponent implements OnInit {\n\n  supplierList: any; \n  displayedColumns: string[] = ['slNo', 'workOrderNo', 'firmName', 'email', 'itemQuantity', 'areaOfOperation', 'edit'];\n  constructor(\n    private service: AdminService,\n    private toastr: ToastrService\n  ) { }\n  @ViewChild(MatSort) sort: any;\n  @ViewChild(MatPaginator) paginator: any;\n  selectedSupplierId: string = '';\n  showSuppliersList: boolean = true;\n  showEditPage: boolean = false;\n  showViewDetailPage: boolean = false;\n  ngOnInit(): void {\n    this.supplierList = new MatTableDataSource([]);\n    this.loadSupplierList();\n  }\n  loadSupplierList() {\n        const spListSubsciption = this.service.getSuplierlist().subscribe((result: any) => {\n            this.supplierList.data = result;\n            this.supplierList.sort = this.sort;\n            this.supplierList.paginator = this.paginator;\n            spListSubsciption.unsubscribe();\n          }, error => this.toastr.error(error.statusText, error.status));\n  }\n  edit (supplierId: any) {\n        this.selectedSupplierId = supplierId;\n        this.showSuppliersList = false;\n        this.showViewDetailPage = false;\n        this.showEditPage = true;\n  }\n  backToList() {\n    this.showEditPage = false;\n    this.showViewDetailPage = false;\n    this.showSuppliersList = true;\n    this.loadSupplierList();\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.supplierList.filter = filterValue.trim().toLowerCase();\n  }\n\n\n}\n","\n<section>\n    <div class=\"container-fluid\">\n        <mat-card class=\"mat-elevation-z5\" *ngIf=\"showSuppliersList\">\n            <mat-card-header color=\"primary\">\n                <mat-card-title>Suppliers List</mat-card-title>\n                <input class=\"float-right search-box form-control\" (keyup)=\"applyFilter($event)\" matInput placeholder=\"Filter\" #input>\n            </mat-card-header>\n            <mat-card-content>\n                <div>\n                    <table mat-table [dataSource]=\"supplierList\" matSort>\n                        <ng-container matColumnDef=\"slNo\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> SL.</th>\n                                <td mat-cell *matCellDef=\"let element; let i = index;\"> \n                                    {{ (paginatorRef.pageIndex * paginatorRef.pageSize) + (i + 1) }}\n                                </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"workOrderNo\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Work-Order no. </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.workOrderNo}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"itemQuantity\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Item quantity </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.itemQuantity}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"firmName\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Firm name </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.firmName}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"email\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Mail-ID </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.userId}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"panNo\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> PAN no. </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.panNo}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"GSTN\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> GSTN </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.GSTN}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"areaOfOperation\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Area of operation </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{ element.blockListLength }} blocks of {{ element.districtListLength }} districts </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"edit\">\n                                <th mat-header-cell *matHeaderCellDef> Edit </th>\n                                <td mat-cell *matCellDef=\"let element\"> <button mat-raised-button (click)=\"edit(element.userId)\"><mat-icon>edit</mat-icon></button> </td>\n                        </ng-container>\n                        <!-- <ng-container matColumnDef=\"remove\">\n                                <th mat-header-cell *matHeaderCellDef> Remove </th>\n                                <td mat-cell *matCellDef=\"let element\"> <button mat-raised-button class=\"btn btn-danger\" (click)=\"remove(element.userId)\"><i class=\"fas fa-trash\" aria-hidden=\"true\"></i></button> </td>\n                        </ng-container> -->                    \n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                        <tr class=\"mat-row\" *matNoDataRow>\n                            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                          </tr>\n                    </table>\n                    <mat-paginator #paginatorRef [pageSizeOptions]=\"[10, 20, 25]\"></mat-paginator>\n                </div>\n            </mat-card-content>\n        </mat-card>\n        <app-update-supplier [supplierId]=\"selectedSupplierId\" (backEvent)=\"backToList()\" *ngIf=\"showEditPage\"></app-update-supplier>\n        <br>\n    <br>\n    <br>\n    <br>\n    </div>\n</section>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"main-footer\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-sm-5\">\n          <p><img src=\"assets/images/niclogo1.png\" alt=\"NIC\" width=\"143px;\"> &copy; 2021 Copyright</p>\n        </div>\n        <div class=\"col-sm-7 text-right\">\n          <p>Design and Developed by <a href=\"https://odisha.nic.in/\" class=\"external\">National Informatics Centre, Ministry of Electronics & Information Technology, Government of Odisha</a></p>\n        </div>\n      </div>\n    </div>\n  </footer>","import { Component, OnInit } from '@angular/core';\nimport { SupplierService } from 'src/app/services/supplier.service';\n\n@Component({\n  selector: 'app-view-supply-list',\n  templateUrl: './view-supply-list.component.html',\n  styleUrls: ['./view-supply-list.component.css']\n})\nexport class ViewSupplyListComponent implements OnInit {\n  result: any;\n  details: any;\n\n  constructor(private service: SupplierService) { }\n\n  ngOnInit(): void {\n    this.service.getSupplyList().subscribe(data =>\n      {\n        this.result = JSON.parse(JSON.stringify(data));\n        // console.log(data);\n      });\n      this.details = {};\n  }\n\n}\n","<section>\n    <div class=\"container-fluid\">\n        <mat-card class=\"mat-elevation-z5\">\n            <mat-card-header>\n                <mat-card-title>LOT List</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-striped table-hover table-bordered text-center\">\n                        <thead class=\"bg-light\">\n                            <tr class=\"border-1\">\n                                <th>SL.</th>\n                                <th>LOT no.</th>\n                                <th>Date</th>\n                                <th>Vehicle no.</th>                                \n                                <th>Vehicle model</th>\n                                <th>Area</th>\n                                <th>Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                           <tr *ngFor=\"let x of result; let i = index\">\n                                <td>{{ i + 1 }}</td>\n                                <td>{{ x.lotNo }}</td>\n                                <td>{{ x.deliveryDate | date:'dd-MM-yyyy' }}</td>\n                                <td>{{ x.vehicleNo }}</td>\n                                <td>{{ x.vehicleName }}</td>\n                                <td>{{ x.area.length }} Blocks</td>\n                                <td>{{ x.status }}</td>\n                        </tbody>\n                    </table>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</section>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<router-outlet></router-outlet>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { DmService } from 'src/app/services/dm.service';\n\n@Component({\n  selector: 'app-confirm-received-crates',\n  templateUrl: './confirm-received-crates.component.html',\n  styleUrls: ['./confirm-received-crates.component.css']\n})\nexport class ConfirmReceivedCratesComponent implements OnInit {\n\n  constructor(\n    private service: DmService,\n    private toastr: ToastrService,\n    private authService: AuthService\n  ) { }\n  confirmForm: any;\n  selectedBlock: any;\n  blockList: any;\n  finYearList: any;\n  finYear: any;\n  userCode: any;\n  noFoundFilterValue: any;\n  receivedCrateList: any;\n  displayedColumns: string[] = ['slNo', 'blockName', 'workOrderNo', 'lotNo', 'firmName', 'rDate', 'rQuantity', 'ahoRemark', 'confirm'];\n  @ViewChild(MatSort) sort: any;\n  @ViewChild(MatPaginator) paginator: any;\n\n  ngOnInit(): void {\n    this.userCode = this.authService.getUserCode();\n    this.receivedCrateList = new MatTableDataSource([]);\n    this.finYear = '';\n    this.selectedBlock = '';\n    this.noFoundFilterValue = '';\n    this.blockList = [];\n    this.loadFinYear();\n    this.loadBlockList();\n    this.loadReceivedCrateList();\n  }\n  loadFinYear() {\n    this.service.getFinYear().subscribe(result => {\n          this.finYearList = result;\n          this.finYear = result[0];\n    }, error => this.toastr.error(error.statusText, error.status) );\n  }  \n  loadBlockList() {\n    this.service.getBlockList(this.userCode).subscribe((result: any) => {\n      this.blockList = result;\n      this.blockList.push( { blockName: \"All\", blockCode: '' } )\n      this.selectedBlock = this.blockList[this.blockList.length - 1];\n    }, error => this.toastr.error(error.statusText, error.status));\n  }\n  loadReceivedCrateList() {\n        this.service.getFinYearDistWiseReceivedCrateList(this.userCode, this.finYear).subscribe(result => {\n              this.receivedCrateList.data = result;              \n        }, error => this.toastr.error(error.statusText, error.status))\n  }\n  confirm(x: any) {\n        this.service.confirmReceivedCrates(x.lotNo, x.blockCode, this.userCode).subscribe(result => {\n              this.toastr.success(result.message);\n              this.loadReceivedCrateList();\n        }, error => this.toastr.error(error.statusText, error.status))\n  }\n  applyFilterBlockWise() {\n    this.receivedCrateList.filter = this.selectedBlock.blockCode.trim().toLowerCase();\n    this.noFoundFilterValue = this.selectedBlock.blockName;\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.receivedCrateList.filter = filterValue.trim().toLowerCase();\n    this.noFoundFilterValue = filterValue;\n  }\n\n}\n","<section>\n    <div class=\"container-fluid\">\n        <mat-card class=\"mat-elevation-z5\">\n            <mat-card-header color=\"primary\">\n                <mat-card-title>Select block</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-4\">\n                        <label for=\"finYear \">Financial Year <span class=\"asterisk-mark\">*</span>:</label>\n                        <select class=\"form-control\" id=\"finYear\" [(ngModel)]=\"finYear\" >\n                            <option value=\"\" disabled selected>--Select--</option>\n                            <option *ngFor='let x of finYearList' [ngValue]=\"x\">{{ x }}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <label for=\"block\"> Block <span class=\"asterisk-mark\">*</span>:</label>\n                        <select class=\"form-control\" id=\"block\" [(ngModel)]=\"selectedBlock\" (change)=\"applyFilterBlockWise()\">\n                            <option value=\"\" disabled selected>--Select--</option>\n                            <option *ngFor=\"let x of blockList\" [ngValue]=\"x\">{{x.blockName}}\n                            </option>\n                        </select>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n        <mat-card class=\"mat-elevation-z5\">\n            <mat-card-header color=\"primary\">\n                <mat-card-title>Received Crate List</mat-card-title>\n                <input class=\"float-right search-box form-control\" (keyup)=\"applyFilter($event)\" matInput placeholder=\"Filter\" #input>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"text-center\" *ngIf=\"receivedCrateList.data.length === 0\" style=\"padding: 30px;\">\n                    <strong style=\"color: red;font-size: large;padding: 10px;\">No data found</strong>\n                </div>\n                <div *ngIf=\"receivedCrateList.data.length !== 0\">\n                    <table mat-table [dataSource]=\"receivedCrateList\" matSort>\n                        <ng-container matColumnDef=\"slNo\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> SL.</th>\n                            <td mat-cell *matCellDef=\"let element; let i = index;\"> \n                                {{ (paginatorRef.pageIndex * paginatorRef.pageSize) + (i + 1) }}\n                            </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"blockName\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Block </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.blockName}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"workOrderNo\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Work-Order no. </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.workOrderNo}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"lotNo\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Item quantity </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.lotNo}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"firmName\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Firm name </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.firmName}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"rDate\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Receive date </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.receivedOn | date: 'dd-MM-yyyy'}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"rQuantity\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Receive quantity</th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.receivedQuantity}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"ahoRemark\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> AHO - remarks </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.remark}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"confirm\">\n                            <th mat-header-cell *matHeaderCellDef> Confirm </th>\n                            <td mat-cell *matCellDef=\"let element\"> \n                                <button mat-raised-button (click)=\"confirm(element);\"> <mat-icon>done</mat-icon> confirm </button>\n                             </td>\n                        </ng-container>\n                    \n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                        <tr class=\"mat-row\" *matNoDataRow>\n                            <td class=\"mat-cell no-record-mat-table\" colspan=\"4\">No data matching the filter \"{{noFoundFilterValue}}\"</td>\n                          </tr>\n                    </table>\n                    <mat-paginator #paginatorRef [pageSizeOptions]=\"[5, 10, 25]\" showFirstLastButtons></mat-paginator>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</section>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { serverUrl } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AhoService {\n\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getFinYearWiseWorkOrderList(userCode: string, finYear: string): Observable<any> {\n    return this.http.get(`${serverUrl}/aho/getFinYearWiseWorkOrderList/${userCode}?finYear=${finYear}`);\n  }\n  getFarmer(farmerId: any): Observable<any> {\n    return this.http.get(`http://apicol.nic.in/api/FarmerData/Fdetails?fid=${farmerId}`)\n  }\n  getFinYearWiseLotList(userCode: string, finYear: string): Observable<any>{\n    return this.http.get(`${serverUrl}/aho/getFinYearWiseLotList/${userCode}?finYear=${finYear}`);\n  }\n  getFinYearWiseReceivedCrateList(userCode: string, finYear: string): Observable<any>{\n    return this.http.get(`${serverUrl}/aho/getFinYearWiseReceivedCrateList/${userCode}?finYear=${finYear}`);\n  }\n  getFinYear(): Observable<any> {\n      return this.http.get(`${serverUrl}/api/getFinYear`);\n  }\n  receiveCreatesFromLot(lotNo: string, userCode: string, data: any): Observable<any> {\n    return this.http.put(`${serverUrl}/aho/receiveCreatesFromLot/${lotNo}/${userCode}`, data);\n  }\n  getWOWiseQuantityDetail(userCode: string, woNo: any): Observable<any> {\n    return this.http.get(`${serverUrl}/aho/getWOWiseQuantityDetail/${userCode}/${woNo}`);\n  }\n  getWSHGList(): Observable<any> {\n      return this.http.get(`${serverUrl}/aho/getWSHGList`);\n  }\n  getPreDistNameOfFarmerID(districtCode: string): Observable<any> {\n      return this.http.get(`${serverUrl}/aho/getPreDistNameOfFarmerID/${districtCode}`);\n  }\n  addCrateDistributionDetail(data: any): Observable<any> {\n      return this.http.post(`${serverUrl}/aho/addCrateDistributionDetail/`, data);\n  }\n  getDistributedCrateList(finYear: any): Observable<any> {\n      return this.http.get(`${serverUrl}/aho/getDistributedCrateList/?finYear=${finYear}`);\n  }\n  farmerIsReceiveCrate(farmerId: any): Observable<any> {\n      return this.http.get(`${serverUrl}/aho/farmerIsReceiveCrate/?farmerId=${farmerId}`);\n  }}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ToastrService } from 'ngx-toastr';\nimport { AhoService } from 'src/app/services/aho.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-crate-distribution',\n  templateUrl: './crate-distribution.component.html',\n  styleUrls: ['./crate-distribution.component.css']\n})\nexport class CrateDistributionComponent implements OnInit {\n  \n  result: any;\n  distrbutedQuantity: any;\n  totalcrates = 0;\n  userCode: any;\n  finYearList: any;\n  workOrderList: any;\n  receivedQuantity: any;\n  totalReceivedQuantity: any;\n  wshg: any;\n  wshgList: any;\n  preDistNameOfFarmerID: any;\n  districtCode: any;\n  distributedCrateList: any;\n  isFarmerAlreadyReceiverate: any;\n  distributedCrateListColumns: string[] = ['slNo', 'distributedOn', 'farmer', 'owner', 'wshg', 'noOfCrates', 'view'];\n  @ViewChild('distributionFormId') el: any;\n  @ViewChild(MatSort) sort: any;\n  @ViewChild(MatPaginator) paginator: any;\n  constructor(\n    private service: AhoService,\n    private toastr: ToastrService,\n    private authService: AuthService\n  ) {}\n  distributionForm: any;\n\n  ngOnInit(): void {\n    this.userCode = this.authService.getUserCode();\n    this.districtCode = this.authService.getDistrictCode();\n    this.wshg = new FormControl('', [Validators.required]);\n    this.distributionForm = new FormGroup({\n          workOrderNo: new FormControl('', [Validators.required]),\n          wshgGroupName: new FormControl('', [Validators.required]),\n          wshgGroupCode: new FormControl('', [Validators.required]),\n          farmerId: new FormControl('', [Validators.required]),\n          farmerName: new FormControl('', [Validators.required]),\n          farmerAdhharNo: new FormControl('', [Validators.required, Validators.pattern(/^-?(0|[1-9]\\d*)?$/) ]),\n          farmerGender: new FormControl('', [Validators.required]),\n          owner: new FormControl('Self', [Validators.required]),\n          farmerShare: new FormControl('', [Validators.required]),\n          noOfCrates: new FormControl(4, [Validators.required, Validators.max(4), Validators.min(1)]),\n          otherAadharNo: new FormControl('', []),\n          otherName: new FormControl('', []),\n          finYear: new FormControl('', []),\n          userId: new FormControl(this.authService.getUserId(), []),\n          districtCode: new FormControl(this.authService.getDistrictCode(), []),\n          blockCode: new FormControl(this.authService.getUserCode(), []),\n          blockName: new FormControl(this.authService.getUserName(), [])\n    })\n    this.loadFinYear();\n    this.loadWorkOrderList();\n    this.loadWSHGList();\n    this.loadDistCodeOfFarmerId();\n    this.loadDistributedCrateList();\n    this.distributedCrateList = new MatTableDataSource([]);\n    this.workOrderList = [];\n    this.finYearList = [];\n    this.wshgList = [];\n    this.isFarmerAlreadyReceiverate = false;\n\n    this.distributionForm.get('owner').valueChanges\n        .subscribe((value: any) => {\n          if(value != 'Self') {\n            this.distributionForm.get('otherName').setValidators([Validators.required, Validators.pattern('[a-zA-Z ]*')]);\n            this.distributionForm.get('otherAadharNo').setValidators([Validators.required, Validators.min(100000000000), Validators.max(999999999999)]);\n          } else {\n            this.distributionForm.get('otherName').clearValidators();\n            this.distributionForm.get('otherAadharNo').clearValidators();\n          }\n          this.distributionForm.get('otherName').updateValueAndValidity();\n          this.distributionForm.get('otherAadharNo').updateValueAndValidity();\n        }\n      );\n  }\n  loadDistCodeOfFarmerId() {\n        this.service.getPreDistNameOfFarmerID(this.districtCode).subscribe(result => {\n              this.preDistNameOfFarmerID = result.distName;\n        }, error => this.toastr.error(error.statusText, error.status) );\n  }\n  loadFinYear() {\n    this.service.getFinYear().subscribe(result => {\n          this.finYearList = result;\n          this.finYear = result[0];\n    }, error => this.toastr.error(error.statusText, error.status) );\n  }\n  loadWorkOrderList() {\n      this.service.getFinYearWiseWorkOrderList(this.userCode, this.finYear).subscribe((result: any) => {\n        this.workOrderList = result;\n      }, error => this.toastr.error(error.statusText, error.status));\n  }\n  loadAvailableCrateQuantity() {\n    this.service.getWOWiseQuantityDetail(this.userCode, this.workOrderNo).subscribe((result: any) => {\n          this.receivedQuantity = result.receivedQuantity;\n          this.distrbutedQuantity = result.distrbutedQuantity;\n          this.totalReceivedQuantity = result.totalReceivedQuantity;\n    }, error => this.toastr.error(error.statusText, error.status));\n  }\n  loadWSHGList() {\n        this.service.getWSHGList().subscribe((result: any) => {\n              this.wshgList = result;\n        }, error => this.toastr.error(error.statusText, error.status));\n  }\n  searchFarmerIdDetails() {\n        const farmerId = `${this.preDistNameOfFarmerID}/${this.farmerId}`;\n        this.service.farmerIsReceiveCrate(farmerId).subscribe(result => {\n              this.isFarmerAlreadyReceiverate = result.status;\n        }, error => this.toastr.error(error.statusText, error.status));\n        this.service.getFarmer(farmerId).subscribe( result => {\n              if(result.length > 0) {\n                  this.farmerName = result[0].vchfarmername;\n                  this.farmerAdhharNo = result[0].VCHAADHARNO;\n                  this.farmerGender = result[0].INTGENDER === 1 ? 'Male' : 'Female';\n              } else {\n                  this.farmerName = '';\n                  this.farmerAdhharNo = '';\n                  this.farmerGender = '';\n              }\n        }, error => this.toastr.error(error.statusText, error.status));\n  }\n  loadDistributedCrateList() {\n      this.service.getDistributedCrateList(this.finYear).subscribe(result => {\n            this.distributedCrateList.data = result;\n            setTimeout(() => {\n              this.distributedCrateList.sort = this.sort;\n              this.distributedCrateList.paginator = this.paginator;\n            }, 500);\n      }, error => this.toastr.error(error.statusText, error.status));\n  }\n  viewDetails(x: any) {\n\n  }\n  onSubmit() {\n        if(this.distributionForm.valid) {\n          if(this.isFarmerAlreadyReceiverate) {\n                  this.toastr.error('This farmer already receive crates');\n          } else {\n                  this.farmerId = `${this.preDistNameOfFarmerID}/${this.farmerId}`;\n                  this.service.addCrateDistributionDetail(this.distributionForm.value).subscribe( result => {\n                        if(result.success) {\n                              this.toastr.success(result.message);\n                              this.distributionForm.patchValue({\n                                    farmerId: '',\n                                    farmerName: '',\n                                    farmerAdhharNo: '',\n                                    farmerGender: '',\n                                    owner: 'Self',\n                                    otherAadharNo: '',\n                                    otherName: '',\n                              });\n                              this.loadDistributedCrateList();\n                              this.loadAvailableCrateQuantity();\n                        } else {\n                          this.toastr.warning(result.message);\n                        }\n                    }, error => this.toastr.error(error.statusText, error.status) )\n          }\n        } else {\n              this.toastr.error(`Please fill all mandatory fields.`);\n            for (const key of Object.keys(this.distributionForm.controls)) {\n                  if (this.distributionForm.controls[key].invalid) {\n                    // console.log(key);\n            //         const invalidControl = this.el.nativeElement.querySelector('[formcontrolname=\"' + key + '\"]');\n            //         invalidControl.focus();\n            //         invalidControl.blur();\n            //         invalidControl.focus();\n            //         break;\n                }\n            }\n        }\n  }\n  removeFarmer(i: any) {\n        // this.repeat.splice(i, 1)\n        // this.totalcrates = 0;\n        // this.repeat.forEach((x) => {\n        //   this.totalcrates = this.totalcrates + x[0].Crate;\n        // })\n\n  }\n  claculate() {\n        this.totalcrates = 0;\n        // this.repeat.forEach((x) => {\n        //   this.totalcrates = this.totalcrates + x[0].Crate;\n        // })\n  }\n\n\n\n\n  addWSHG() {\n      this.wshgGroupCode = this.wshg.value.groupCode;\n      this.wshgGroupName = this.wshg.value.groupName;\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.distributedCrateList.filter = filterValue.trim().toLowerCase();\n  }\n  // GETTER & SETTER FOR FORM-GROUP\n  set wshgGroupCode (val) {\n    this.distributionForm.get('wshgGroupCode').setValue(val);\n  }\n  get wshgGroupCode () {\n    return this.distributionForm.get('wshgGroupCode').value\n  }\n  set wshgGroupName (val) {\n    this.distributionForm.get('wshgGroupName').setValue(val);\n  }\n  get wshgGroupName () {\n    return this.distributionForm.get('wshgGroupName').value\n  }\n  set farmerId (val) {\n    this.distributionForm.get('farmerId').setValue(val);\n  }\n  get farmerId () {\n    return this.distributionForm.get('farmerId').value\n  }\n  set farmerName (val) {\n    this.distributionForm.get('farmerName').setValue(val);\n  }\n  get farmerName () {\n    return this.distributionForm.get('farmerName').value\n  }\n  set farmerAdhharNo (val) {\n    this.distributionForm.get('farmerAdhharNo').setValue(val);\n  }\n  get farmerAdhharNo () {\n    return this.distributionForm.get('farmerAdhharNo').value\n  }\n  set farmerGender (val) {\n    this.distributionForm.get('farmerGender').setValue(val);\n  }\n  get farmerGender () {\n    return this.distributionForm.get('farmerGender').value\n  }\n  set owner (val) {\n    this.distributionForm.get('owner').setValue(val);\n  }\n  get owner () {\n    return this.distributionForm.get('owner').value\n  }\n  set noOfCrates (val) {\n    this.distributionForm.get('noOfCrates').setValue(val);\n  }\n  get noOfCrates () {\n    return this.distributionForm.get('noOfCrates').value\n  }\n  set otherAadharNo (val) {\n    this.distributionForm.get('otherAadharNo').setValue(val);\n  }\n  get otherAadharNo () {\n    return this.distributionForm.get('otherAadharNo').value\n  }\n  set otherName (val) {\n    this.distributionForm.get('otherName').setValue(val);\n  }\n  get otherName () {\n    return this.distributionForm.get('otherName').value\n  }\n  set finYear (val) {\n    this.distributionForm.get('finYear').setValue(val);\n  }\n  get finYear () {\n    return this.distributionForm.get('finYear').value\n  }\n  set workOrderNo (val) {\n    this.distributionForm.get('workOrderNo').setValue(val);\n  }\n  get workOrderNo () {\n    return this.distributionForm.get('workOrderNo').value\n  }\n\n  get workOrderNoVal () { return this.distributionForm.get('workOrderNo'); }\n  get noOfCratesVal () { return this.distributionForm.get('noOfCrates'); }\n  get farmerIdVal () { return this.distributionForm.get('farmerId'); }\n  get otherAadharNoVal () { return this.distributionForm.get('otherAadharNo'); }\n  get otherNameVal () { return this.distributionForm.get('otherName'); }\n  get farmerShareVal () { return this.distributionForm.get('farmerShare'); }\n}\n","<section>\n    <div class=\"container-fluid\">\n        <form [formGroup]=\"distributionForm\" (ngSubmit)='onSubmit()' #distributionFormId>\n            <mat-card class=\"mat-elevation-z5\">\n                <mat-card-header color=\"primary\">\n                    <mat-card-title>Select details</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                    <div class=\"row\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"finYear\">Financial year <span class=\"asterisk-mark\">*</span>:</label>\n                            <select class=\"form-control\" id=\"finYear\" formControlName=\"finYear\" (change)=\"loadWorkOrderList();loadDistributedCrateList();\" required >\n                                <option value=\"\" disabled selected>--Select--</option>\n                                <option *ngFor='let x of finYearList' [ngValue]=\"x\">{{ x }}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group col-6\">\n                            <label for=\"woNo\">Select work-order <span class=\"asterisk-mark\">*</span>:</label>\n                            <select class=\"form-control\" id=\"woNo\" formControlName=\"workOrderNo\" (change)=\"loadAvailableCrateQuantity()\" required >\n                                <option value=\"\" disabled selected>--Select--</option>\n                                <option *ngFor='let x of workOrderList' [ngValue]=\"x.workOrderNo\">{{x.workOrderNo}}</option>\n                            </select>\n                            <div *ngIf=\"workOrderNoVal.invalid && (workOrderNoVal.dirty || workOrderNoVal.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"workOrderNoVal.errors.required\">\n                                    Work-order number is required.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <table class=\"table table-hover table-striped preview-table\" *ngIf=\"workOrderNo\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Total received quantity</th>\n                                <th scope=\"col\">Crates received from {{ workOrderNo }}</th>\n                                <th scope=\"col\"> Distributed</th>\n                                <th scope=\"col\"> Available</th>\n                            </tr>\n                        </thead>\n                        <tbody >\n                            <tr>\n                                <td>{{ totalReceivedQuantity }}</td>\n                                <td>{{ receivedQuantity }}</td>\n                                <td>{{ distrbutedQuantity }}</td>\n                                <td>{{ receivedQuantity - distrbutedQuantity }}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </mat-card-content>\n            </mat-card>\n            <mat-card class=\"mat-elevation-z5\">\n                <mat-card-header>\n                    <mat-card-title>Crate distribution</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                    <div class=\"row\">\n                        <div class=\"form-group col-6\">\n                            <label for=\"wshg\">Select WSHG <span class=\"asterisk-mark\">*</span>:</label>\n                            <select class=\"form-control\" id=\"wshg\" [formControl]=\"wshg\" (change)=\"addWSHG();\" required>\n                                <option value=\"\" disabled selected>--Select--</option>\n                                <option *ngFor='let x of wshgList' [ngValue]=\"x\">{{ x.groupName }}</option>\n                            </select>\n                            <div *ngIf=\"wshg.invalid && (wshg.dirty || wshg.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"wshg.errors.required\">\n                                    WSHG is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"noOfCrates\">No. of crates giving<span class=\"asterisk-mark\">*</span>:</label>\n                            <input type=\"number\" class=\"form-control\" id=\"noOfCrates\" placeholder=\"Enter number of crates\" formControlName='noOfCrates'>\n                            <div *ngIf=\"noOfCratesVal.invalid && (noOfCratesVal.dirty || noOfCratesVal.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"noOfCratesVal.errors.required\">\n                                    Number of crates is required.\n                                </div>\n                                <div *ngIf=\"noOfCratesVal.errors.min\">\n                                    Minimum 1 crate can be allowed.\n                                </div>\n                                <div *ngIf=\"noOfCratesVal.errors.max\">\n                                    Maximum 4 crate can be allowed.\n                                </div>\n                            </div>\n                        </div>\n                    </div>  \n                    <div class=\"row\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"farmerID\">Enter farmer-ID <span class=\"asterisk-mark\">*</span>:</label>\n                            <div class=\"input-group mb-3\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><b>{{preDistNameOfFarmerID}}/</b></span>\n                                </div>\n                                <input type=\"number\" id=\"farmerID\" class=\"form-control\" (keyup)=\"searchFarmerIdDetails();\" formControlName='farmerId'\n                                    placeholder=\"Enter Farmer ID\" maxlength=\"16\" required>\n                            </div>\n                            <div *ngIf=\"farmerIdVal.invalid && (farmerIdVal.dirty || farmerIdVal.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"farmerIdVal.errors.required\">\n                                    Farmer-ID is required.\n                                </div>\n                            </div>\n                            <div *ngIf=\"isFarmerAlreadyReceiverate\" class=\"alert alert-danger\">\n                                This farmer already receive crates.\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6\" *ngIf=\"farmerName\">\n                            <table class=\"table table-hover table-striped\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Farmer name</th>\n                                        <th scope=\"col\">Gender</th>\n                                        <th scope=\"col\"> Adhhar number</th>\n                                    </tr>\n                                </thead>\n                                <tbody >\n                                    <tr>\n                                        <td>{{ farmerName }}</td>\n                                        <td>{{ farmerGender }}</td>\n                                        <td>{{ farmerAdhharNo }}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>  \n                    <div class=\"row\">\n                        <div class=\"form-group col-md-6\">\n                            <section class=\"example-section\">\n                                <label class=\"example-margin\">Select owner <span class=\"asterisk-mark\">*</span>:</label><br>\n                                <mat-radio-group formControlName='owner'>\n                                <mat-radio-button class=\"example-margin\" value=\"Self\">Self</mat-radio-button>\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<mat-radio-button class=\"example-margin\" value=\"Father\">Father</mat-radio-button>\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<mat-radio-button class=\"example-margin\" value=\"Husband\">Husband</mat-radio-button>\n                                </mat-radio-group>\n                            </section>\n                        </div>\n                        <div class=\"form-group col-md-6\">\n                            <section class=\"example-section\">\n                                <label class=\"example-margin\">Farmer share <span class=\"asterisk-mark\">*</span>:</label><br>\n                                <mat-radio-group formControlName='farmerShare'>\n                                    <mat-radio-button class=\"example-margin\" value=\"Paid\">Paid</mat-radio-button>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<mat-radio-button class=\"example-margin\" value=\"Not paid\">Not paid</mat-radio-button>\n                                </mat-radio-group>\n                            </section>\n                        </div>\n                    </div>\n                    <div class=\"row\" *ngIf=\"owner != 'Self'\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"otherName\">Enter {{ owner }}'s name <span class=\"asterisk-mark\">*</span>:</label>\n                            <input type=\"text\" class=\"form-control\" id=\"otherName\" placeholder=\"Enter person Name \" formControlName='otherName'>\n                            <div *ngIf=\"otherNameVal.invalid && (otherNameVal.dirty || otherNameVal.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"otherNameVal.errors.required\">\n                                    Name is required.\n                                </div>\n                                <div *ngIf=\"otherNameVal.errors.pattern\">\n                                    Enter only alphabets.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"otherAadharNo\">Enter {{ owner }}'s aadhar number <span class=\"asterisk-mark\">*</span>:</label>\n                            <input type=\"number\"class=\"form-control\" id=\"otherAadharNo\" placeholder=\"Enter Aadhar number\" formControlName='otherAadharNo' minlength=\"12\" maxlength=\"12\">\n                            <div *ngIf=\"otherAadharNoVal.invalid && (otherAadharNoVal.dirty || otherAadharNoVal.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"otherAadharNoVal.errors.required\">\n                                    Aadhar number is required.\n                                </div>\n                                <div *ngIf=\"otherAadharNoVal.errors.min\">\n                                    Enter valid aadhar number.\n                                </div>\n                                <div *ngIf=\"otherAadharNoVal.errors.max\">\n                                    Enter valid aadhar number.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button mat-raised-button type=\"submit\" [disabled]=\"farmerGender === 'Male' && distributionForm.value['owner'] === 'Self'\"> Distribute </button>\n                    <strong class=\"asterisk-mark\" *ngIf=\"farmerGender === 'Male'\">Not allowed to male farmer</strong>\n                    <strong class=\"asterisk-mark\" *ngIf=\"isFarmerAlreadyReceiverate\">This farmer already receive crates</strong>\n                </mat-card-actions>\n            </mat-card>\n        </form>\n        <mat-card class=\"mat-elevation-z5\">\n            <mat-card-header color=\"primary\">\n                <mat-card-title>Distributed crate list</mat-card-title>\n                <input class=\"float-right search-box form-control\" (keyup)=\"applyFilter($event)\" matInput placeholder=\"Filter\" #input>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"text-center\" *ngIf=\"distributedCrateList.data.length === 0\" style=\"padding: 30px;\">\n                    <strong style=\"color: red;font-size: large;padding: 10px;\">No pending record found on {{ finYear }}</strong>\n                </div>\n                <div *ngIf=\"distributedCrateList.data.length !== 0\">\n                    <table mat-table [dataSource]=\"distributedCrateList\" matSort>\n                        <ng-container matColumnDef=\"slNo\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> SL.</th>\n                                <td mat-cell *matCellDef=\"let element; let i = index;\"> \n                                    {{ (paginatorRef.pageIndex * paginatorRef.pageSize) + (i + 1) }}\n                                </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"distributedOn\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Distributed on </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{ element.distributedOn | date: 'dd-MM-yyyy' }} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"farmer\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Farmer </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.farmerName}} <br>( {{ element.farmerId }} )</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"owner\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Owner </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{ element.owner }} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"wshg\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> WSHG </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{ element.wshgGroupName }} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"noOfCrates\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Number of crates </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{ element.noOfCrates }} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"view\">\n                                <th mat-header-cell *matHeaderCellDef> View details </th>\n                                <td mat-cell *matCellDef=\"let element\"> <button mat-raised-button class=\"btn btn-primary\" (click)=\"viewDetails(element)\"><i class=\"fas fa-bars\" aria-hidden=\"true\"></i></button> </td>\n                        </ng-container>\n                    \n                        <tr mat-header-row *matHeaderRowDef=\"distributedCrateListColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: distributedCrateListColumns;\"></tr>\n                        <tr class=\"mat-row\" *matNoDataRow>\n                            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                          </tr>\n                    </table>\n                    <mat-paginator #paginatorRef [pageSizeOptions]=\"[5, 10, 25]\" showFirstLastButtons></mat-paginator>\n                </div>\n            </mat-card-content>\n        </mat-card>\n       \n    </div>\n</section>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminModule } from './admin/admin.module';\nimport { SupplierModule } from './supplier/supplier.module';\nimport { AhoModule } from './aho/aho.module';\nimport { DmModule } from './dm/dm.module';\nimport { LoginComponent } from './auth/login/login.component';\nimport { LayoutComponent } from './common/layout/layout.component';\nimport { HeaderComponent } from './common/layout/header/header.component';\nimport { SidebarComponent } from './common/layout/sidebar/sidebar.component';\nimport { FooterComponent } from './common/layout/footer/footer.component';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    LayoutComponent,\n    HeaderComponent,\n    SidebarComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AdminModule,\n    SupplierModule,\n    AhoModule,\n    DmModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormArray, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-add-supplier',\n  templateUrl: './add-supplier.component.html',\n  styleUrls: ['./add-supplier.component.css']\n})\nexport class AddSupplierComponent implements OnInit {\n\n  @ViewChild('fromId') el: any;\n  constructor(\n    private service: AdminService,\n    private toastr: ToastrService,\n    private formBuilder: FormBuilder\n  ) { }\n    \n  supplierForm: any;\n  aoopList: any;\n  showAreaOfOperationDiv: any;\n  ngOnInit(): void {\n      this.showAreaOfOperationDiv = false;\n      this.aoopList = this.formBuilder.group({\n        areaOfOperation : new FormArray([])\n    })\n    this.supplierForm = this.formBuilder.group({\n        workOrderNo : ['', Validators.required],\n        itemQuantity : ['', Validators.required],\n        firmName : ['', Validators.required],\n        emailId : ['', Validators.required],\n        panNo : ['', Validators.required],\n        mobileNo : ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n        GSTN : ['', Validators.required],\n        areaOfOperation : this.formBuilder.array([])\n    })\n  }\n  onSubmit() {\n    this.supplierForm.value.areaOfOperation = this.aoopList.value.areaOfOperation;\n                  if(this.supplierForm.value.areaOfOperation.length > 0) {\n                      this.service.addSupplier(this.supplierForm.value).subscribe((result: any) => {\n                            this.toastr.success(result.message, result.status);\n                            this.supplierForm.reset();\n                            this.showAreaOfOperationDiv = false;\n                      }, error => this.toastr.error(error.statusText, error.status));\n                  } else {\n                    this.toastr.error('Please add minimum 1 district.');\n                  }\n  }\n  edit (x: any) {\n    this.supplierForm.patchValue({\n            firmName: x.firmName,\n            itemQuantity: x.itemQuantity,\n            workOrderNo: x.workOrderNo,\n            mobileNo: x.mobileNo,\n            GSTN: x.GSTN\n    });\n  } \n  next() {\n    if(this.supplierForm.valid) {\n              this.showAreaOfOperationDiv = true;\n    } else {\n          for (const key of Object.keys(this.supplierForm.controls)) {\n                if (this.supplierForm.controls[key].invalid) {\n                  const invalidControl = this.el.el.nativeElement.querySelector('[formcontrolname=\"' + key + '\"]');\n                  invalidControl.focus();\n                  invalidControl.blur();\n                  invalidControl.focus();\n                  break;\n              }\n          }\n    }\n  }\n  back() {\n    this.showAreaOfOperationDiv = false;\n  }\n}\n","\n    <section>\n        <div class=\"container-fluid\">\n            <mat-card class=\"mat-elevation-z5\">\n                <mat-card-header color=\"primary\">\n                    <mat-card-title>\n                        <span *ngIf=\"!showAreaOfOperationDiv\">Enter supplier details</span>\n                        <span *ngIf=\"showAreaOfOperationDiv\">Add area of operation</span>\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                    <app-supplier-form *ngIf=\"!showAreaOfOperationDiv\" [supplierForm]=\"supplierForm\" #fromId></app-supplier-form>\n                    <app-add-area-of-operation *ngIf=\"showAreaOfOperationDiv\" [supplierForm]=\"aoopList\"></app-add-area-of-operation>\n                </mat-card-content>\n                <mat-card-actions>\n                    <div *ngIf=\"showAreaOfOperationDiv\">\n                        <button class=\"btn btn-primary float-left\" (click)=\"back();\" mat-raised-button > <mat-icon>arrow_backward</mat-icon>Previous</button>\n                        <button class=\"btn btn-primary float-right\" type=\"submit\" (click)=\"onSubmit()\" mat-raised-button >Final add new supplier</button>\n                    </div>\n                    <button *ngIf=\"!showAreaOfOperationDiv\" mat-raised-button (click)=\"next();\"> Next<mat-icon>arrow_forward</mat-icon></button>\n                    <br>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </section>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { serverUrl } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    const role = this.authService.getUserRole();\n    switch (role) {\n          case 'ADMIN': {\n                  this.router.navigate(['/admin']);\n                  break;\n              }\n          case 'AHO': {\n                  this.router.navigate(['/aho']);\n                  break;\n              }\n          case 'DM': {\n                  this.router.navigate(['/dm']);\n                  break;\n              }\n          case 'SUPPLIER': {\n                this.router.navigate(['/supplier']);\n                break;\n              }\n          default: {\n                  window.location.href = `${serverUrl}/home.html`;\n                  break;\n              }\n      }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { AhoService } from 'src/app/services/aho.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-receive-crates',\n  templateUrl: './receive-crates.component.html',\n  styleUrls: ['./receive-crates.component.css']\n})\nexport class ReceiveCratesComponent implements OnInit {\n  result: any[] = [];\n  workOrderList : any;\n  finYear: any;\n  finYearList: any;\n  userCode: any;\n  selectedLot: any;\n  receivedCrateList: any;\n\n  constructor(\n    private service: AhoService,\n    private toastr: ToastrService,\n    private authService: AuthService\n  ) {}\n  ngOnInit(): void {\n    this.userCode = this.authService.getUserCode();\n    this.finYear = '';\n    this.workOrderList = [];\n    this.receivedCrateList = [];\n    this.loadFinYear();\n    this.loadLotList();\n    this.loadReceivedCrateList();\n    this.selectedLot = {};\n  }\n  loadFinYear() {\n    this.service.getFinYear().subscribe(result => {\n          this.finYearList = result;\n          this.finYear = result[0];\n    }, error => this.toastr.error(error.statusText, error.status) );\n  }\n  loadLotList() {\n    this.service.getFinYearWiseLotList(this.userCode, this.finYear).subscribe(result => {\n          this.workOrderList = result;\n    }, error => this.toastr.error(error.statusText, error.status))\n  }\n  showReceiveModal(x: any) {\n      this.selectedLot = x;\n      this.selectedLot.receivedQuantity = x.totalQuantity;\n      this.selectedLot.remark = '';\n  }\n  receive() {\n      let data = {\n        receivedQuantity: this.selectedLot.receivedQuantity,\n        remark: this.selectedLot.remark\n      }\n      this.service.receiveCreatesFromLot(this.selectedLot.lotNo, this.userCode, data).subscribe(result => {\n          this.toastr.success(result.message);\n          this.loadLotList();\n          this.loadReceivedCrateList();\n      }, error => this.toastr.error(error.statusText, error.status));\n  }\n  loadReceivedCrateList() {\n        this.service.getFinYearWiseReceivedCrateList(this.userCode, this.finYear).subscribe(result => {\n              this.receivedCrateList = result;\n        }, error => this.toastr.error(error.statusText, error.status))\n  }\n}\n","<section>\n    <div class=\"container-fluid\">\n        <mat-card class=\"mat-elevation-z5\">\n            <mat-card-header color=\"primary\">\n                <mat-card-title>Select financial year</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"workOrderNo\">Financial year <span class=\"asterisk-mark\">*</span>:</label>\n                        <select class=\"form-control\" id=\"district\" (change)=\"loadLotList();loadReceivedCrateList();\" [(ngModel)]=\"finYear\" required>\n                            <option value=\"\" disabled selected>--Select--</option>\n                            <option *ngFor=\"let x of finYearList\" [ngValue]=\"x\">{{ x }}\n                            </option>\n                        </select>\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n        <mat-card class=\"mat-elevation-z5\">\n            <mat-card-header color=\"primary\">\n                <mat-card-title>Receive Crates</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"text-center\" *ngIf=\"workOrderList.length === 0\" style=\"padding: 30px;\">\n                    <strong style=\"color: red;font-size: large;padding: 10px;\">No pending record found on {{ finYear }}</strong>\n                </div>\n                <table class=\"table table-hover table-striped\" *ngIf=\"workOrderList.length !== 0\">\n                    <thead >\n                        <tr>\n                            <th scope=\"col\">SL.</th>\n                            <th scope=\"col\">LOT no.</th>\n                            <th scope=\"col\">Worker-order no.</th>\n                            <th scope=\"col\">Firm name</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Vehicle</th>\n                            <th scope=\"col\">Quanity</th>\n                            <th scope=\"col\">Receive</th>\n                        </tr>\n                    </thead>\n                    <tbody >\n                        <tr *ngFor=\"let x of workOrderList;let i = index\" >\n                            <td>{{ i + 1 }}</td>\n                            <td>{{ x.lotNo }}</td>\n                            <td>{{ x.workOrderNo }}</td>\n                            <td>{{ x.firmName }}</td>\n                            <td>{{ x.deliveryDate | date: 'dd-MM-yyyy' }}</td>\n                            <td>\n                                {{ x.vehicleName }}\n                                <br>\n                                ({{ x.vehicleNo }})\n                            </td>\n                            <td>{{ x.totalQuantity }}</td>\n                            <td>\n                                <button mat-raised-button (click)=\"showReceiveModal(x)\" data-toggle=\"modal\"\n                                    data-target=\"#receiveModal\">Receive</button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </mat-card-content>\n        </mat-card>\n        <mat-card class=\"mat-elevation-z5\">\n            <mat-card-header color=\"primary\">\n                <mat-card-title>Received Crates List</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"text-center\" *ngIf=\"receivedCrateList.length === 0\" style=\"padding: 30px;\">\n                    <strong style=\"color: red;font-size: large;padding: 10px;\">No crate received on {{ finYear }}</strong>\n                </div>\n                <table class=\"table table-hover table-striped\" *ngIf=\"receivedCrateList.length !== 0\">\n                    <thead >\n                        <tr>\n                            <th scope=\"col\">SL.</th>\n                            <th scope=\"col\">W.O. no.</th>\n                            <th scope=\"col\">LOT no.</th>\n                            <th scope=\"col\">Firm name</th>\n                            <th scope=\"col\">Receive date</th>\n                            <th scope=\"col\">Total Quanity</th>\n                            <th scope=\"col\">Received quantity</th>\n                            <th scope=\"col\">Remark</th>\n                            <th scope=\"col\">Status</th>\n                        </tr>\n                    </thead>\n                    <tbody >\n                        <tr *ngFor=\"let x of receivedCrateList;let i = index\" >\n                            <td>{{ i + 1 }}</td>\n                            <td>{{ x.workOrderNo }}</td>\n                            <td>{{ x.lotNo }}</td>\n                            <td>{{ x.firmName }}</td>\n                            <td>{{ x.receivedOn | date: 'dd-MM-yyyy' }}</td>\n                            <td>{{ x.totalQuantity }}</td>\n                            <td>{{ x.receivedQuantity }}</td>\n                            <td>{{ x.remark }}</td>\n                            <td>{{ x.status }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</section>\n\n<div class=\"modal fade\" id=\"receiveModal\" tabindex=\"1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document1\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header deleteheader bg-primary\">\n                <h3 class=\"modal-title text-white\" id=\"ModalLabel\">Enter received crate details</h3>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <table class=\"table table-hover\">\n                    <tbody >\n                        <tr>\n                            <td>Worker-order no. :</td>\n                            <td>{{ selectedLot.workOrderNo }}</td>\n                        </tr>\n                        <tr>\n                            <td>LOT no. :</td>\n                            <td>{{ selectedLot.lotNo }}</td>\n                        </tr>              \n                        <tr>\n                            <td>Firm name :</td>\n                            <td>{{ selectedLot.firmName }}</td>\n                        </tr>              \n                        <tr>\n                            <td>Invoice number :</td>\n                            <td>{{ selectedLot.invoiceNo }}</td>\n                        </tr>              \n                        <tr>\n                            <td>Way bill number :</td>\n                            <td>{{ selectedLot.wayBillNo }}</td>\n                        </tr>\n                        <tr>\n                            <td>Total crate quantity:</td>\n                            <td>{{ selectedLot.totalQuantity }}</td>\n                        </tr>\n                        <tr>\n                            <td>Received crate quantity  :</td>\n                            <td>\n                                <input type=\"text\" [(ngModel)]=\"selectedLot.receivedQuantity\" class=\"form-control mat-elevation-z3\">\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Remark :</td>\n                            <td>\n                                <input type=\"text\" [(ngModel)]=\"selectedLot.remark\" class=\"form-control mat-elevation-z3\" placeholder=\"Enter any remark\">\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"modal-footer\">\n                <button mat-raised-button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>&nbsp;\n                <button mat-raised-button type=\"button\" class=\"btn btn-success\"(click)=\"receive()\" data-dismiss=\"modal\" >Receive </button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatSort } from '@angular/material/sort';\nimport { ToastrService } from 'ngx-toastr';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-select-blocks',\n  templateUrl: './select-blocks.component.html',\n  styleUrls: ['./select-blocks.component.css']\n})\nexport class SelectBlocksComponent implements OnInit {\n\n  constructor(\n    private service: AdminService,\n    private toastr: ToastrService,\n  ) { }\n\n  @Input() supplierForm: any;\n  @Output() newItemEvent = new EventEmitter<string>();\n\n  selectedDistrict: any;\n  districtList: any;\n  \n  blockList: any;\n  blockListColumns: string[] = ['slNo', 'blockCode', 'blockName', 'select'];\n  selection: any = new SelectionModel<any>(true, []);\n  @ViewChild(MatSort) sort: any;\n  @ViewChild('paginatorRef') paginator: any;\n\n  ngOnInit(): void {\n\n    this.selectedDistrict = '';\n    this.loadDistrict();\n    this.districtList = [];\n    this.blockList = new MatTableDataSource([]);\n  }\n\n  loadDistrict() {\n    this.service.getDistrictList().subscribe(result => {\n      this.districtList = result;\n    }, error => this.toastr.error(error.statusText, error.status));\n  }\n  loadBlock() {\n        this.service.getBlockList(this.selectedDistrict.districtCode).subscribe((result: any) => {\n              let selectedList = []\n              for(let i = 0; i < result.length; i++) {\n                for(let j = 0; j < this.supplierForm.value.areaOfOperation.length; j++) {\n                  if(this.supplierForm.value.areaOfOperation[j].districtCode === result[i].districtCode && this.supplierForm.value.areaOfOperation[j].blockCode === result[i].blockCode) {\n                    // result[i].isChecked = this.supplierForm.value.areaOfOperation[j].isChecked ? true : false;\n                    if(this.supplierForm.value.areaOfOperation[j].isChecked) {\n                      selectedList.push(result[i]);\n                    } else {\n                      result[i].isChecked = false;\n                    }\n                  }\n                }\n              }\n\n          this.selection = new SelectionModel<any>(true, selectedList);\n              this.blockList.data = result;\n              this.blockList.sort = this.sort;\n              this.blockList.paginator = this.paginator;\n        }, error => this.toastr.error(error.statusText, error.status));\n  }\n  assignDistrict() {\n      if(this.selection._selected.length > 0) {\n        let i = this.areaOfOperation.value.length;\n        while( i-- ) {\n                if(this.areaOfOperation.value[i].districtCode === this.selectedDistrict.districtCode) {\n                  this.supplierForm.value['areaOfOperation'].splice(i, 1);\n                }\n        }\n        this.selection._selected.forEach((e: any) => {\n            e.districtName = this.selectedDistrict.districtName;\n            e.isChecked = true;\n            this.supplierForm.value.areaOfOperation.push(e);\n          });\n          this.selectedDistrict = '';\n          this.blockList.data = [];\n          this.newItemEvent.emit();\n          this.selection = new SelectionModel<any>(true, []);\n        } else {\n          this.toastr.error('Please select minimum one block');\n      }\n  }\n  applyBlockListFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.blockList.filter = filterValue.trim().toLowerCase();\n  }\n\n\n\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.blockList.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.blockList.data.forEach((row: any) => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n  get areaOfOperation() { return this.supplierForm.get('areaOfOperation'); }\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-lg-6\">\n            <label for=\"district\">District <span class=\"asterisk-mark\">*</span>:</label>\n            <select class=\"form-control\" id=\"district\" (change)=\"loadBlock();\" [(ngModel)]=\"selectedDistrict\" [ngModelOptions]=\"{standalone: true}\" required>\n                <option value=\"\" disabled selected>--Select--</option>\n                <option *ngFor=\"let x of districtList\" [ngValue]=\"x\">{{ x.districtName }}\n                </option>\n            </select>\n    </div>\n</div>\n<br>\n<mat-card class=\"mat-elevation-z5\" *ngIf=\"selectedDistrict\">\n    <mat-card-header color=\"primary\">\n        <mat-card-subtitle>Select blocks for area of operation in {{ selectedDistrict.districtName }} district </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n                            <table mat-table [dataSource]=\"blockList\" matSort>\n                                <ng-container matColumnDef=\"slNo\">\n                                        <th mat-header-cell *matHeaderCellDef> SL.</th>\n                                        <td mat-cell *matCellDef=\"let element; let i = index;\"> \n                                            {{ (paginatorRef.pageIndex * paginatorRef.pageSize) + (i + 1) }}\n                                        </td>\n                                        <td mat-footer-cell *matFooterCellDef></td>\n                                </ng-container>\n                                <ng-container matColumnDef=\"blockCode\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Block code </th>\n                                        <td mat-cell *matCellDef=\"let element\"> {{ element.blockCode }} </td>\n                                        <td mat-footer-cell *matFooterCellDef></td>\n                                </ng-container>\n                                <ng-container matColumnDef=\"blockName\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Block name </th>\n                                        <td mat-cell *matCellDef=\"let element\"> {{element.blockName}} </td>\n                                        <td mat-footer-cell *matFooterCellDef></td>\n                                </ng-container>\n                                <ng-container matColumnDef=\"select\">\n                                        <th mat-header-cell *matHeaderCellDef>\n                                                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                                                [checked]=\"selection.hasValue() && isAllSelected()\"\n                                                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                                                [aria-label]=\"checkboxLabel()\">\n                                                </mat-checkbox>\n                                        </th>\n                                        <td mat-cell *matCellDef=\"let row\" style=\"width: 20%;\">\n                                                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                                                (change)=\"$event ? selection.toggle(row) : null\"\n                                                                [checked]=\"selection.isSelected(row)\"\n                                                                [aria-label]=\"checkboxLabel(row)\">\n                                                </mat-checkbox>\n                                        </td>\n                                        <td mat-footer-cell *matFooterCellDef>\n                                            <button mat-raised-button class=\"btn btn-primary\" (click)=\"assignDistrict();\" type=\"button\"><i class=\"fas fa-plus\" aria-hidden=\"true\"></i> Add district</button>\n                                        </td>\n                                </ng-container>\n                                <tr mat-header-row *matHeaderRowDef=\"blockListColumns; sticky: true\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: blockListColumns;\"></tr>\n                                <tr mat-footer-row *matFooterRowDef=\"blockListColumns; sticky: true\"></tr>\n                                <tr class=\"mat-row\" *matNoDataRow></tr>\n                            </table>\n                            <mat-paginator #paginatorRef [pageSizeOptions]=\"[5, 10, 25]\"></mat-paginator>\n    </mat-card-content>\n</mat-card>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfirmReceivedCratesComponent } from './confirm-received-crates/confirm-received-crates.component';\nimport { DmRoutingModule } from './dm-routing.module';\nimport { ConfirmedListByDmComponent } from './confirmed-list-by-dm/confirmed-list-by-dm.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n\n@NgModule({\n  declarations: [ConfirmReceivedCratesComponent, ConfirmedListByDmComponent],\n  imports: [\n    CommonModule,\n    DmRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatIconModule\n  ]\n})\nexport class DmModule { }\n","import { MatPaginator } from '@angular/material/paginator';\nimport { ViewChild } from '@angular/core';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-area-of-operation-list',\n  templateUrl: './area-of-operation-list.component.html',\n  styleUrls: ['./area-of-operation-list.component.css']\n})\nexport class AreaOfOperationListComponent implements OnInit {\n\n  constructor() { }\n  \n  areaOfOperationList: any;\n  @Input() supplierForm: any;\n  aooListColumns: string[] = ['slNo', 'district', 'block', 'remove'];\n  @ViewChild(MatSort) sort: any;\n  @ViewChild(MatPaginator) aooPaginator: any;\n  ngOnInit(): void {\n    this.areaOfOperationList = new MatTableDataSource([]);\n    this.areaOfOperationList.data = this.areaOfOperation.value;\n    setTimeout(() => {\n      this.areaOfOperationList.sort = this.sort;\n      this.areaOfOperationList.paginator = this.aooPaginator;\n      this.areaOfOperationList._updateChangeSubscription();\n    }, 300)\n  }\n\n  removeAreaOfOperation(index: any) {\n    this.supplierForm.value.areaOfOperation.splice(index, 1);\n    this.areaOfOperationList._updateChangeSubscription();\n  }\n  applyAOOListFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.areaOfOperationList.filter = filterValue.trim().toLowerCase();\n    this.areaOfOperationList._updateChangeSubscription();\n  }\n  get areaOfOperation() { return this.supplierForm.get('areaOfOperation'); }\n  public updateTable() { \n    setTimeout(() => {\n      this.areaOfOperationList.sort = this.sort;\n      this.areaOfOperationList.paginator = this.aooPaginator;\n      this.areaOfOperationList._updateChangeSubscription();\n    }, 300)\n  }\n}\n","<mat-card class=\"mat-elevation-z5\">\n    <mat-card-header>\n        <mat-card-subtitle>\n            <span>Areas of operation </span>\n        </mat-card-subtitle>\n        <input class=\"search-box form-control\" (keyup)=\"applyAOOListFilter($event)\" matInput placeholder=\"Filter\" #aooInput>\n    </mat-card-header>\n    <mat-card-content>\n                            <div class=\"text-center\" *ngIf=\"supplierForm.value.areaOfOperation.length === 0\" style=\"padding: 30px;\">\n                                <strong style=\"color: red;font-size: large;padding: 10px;\">Districts are not added</strong>\n                            </div>\n                            <div *ngIf=\"supplierForm.value.areaOfOperation.length !== 0\">\n                                \n                                <table mat-table [dataSource]=\"areaOfOperationList\" matSort>\n                                    <ng-container matColumnDef=\"slNo\">\n                                            <th mat-header-cell *matHeaderCellDef> SL.</th>\n                                            <td mat-cell *matCellDef=\"let element; let i = index;\"> \n                                                {{ (paginatorRef.pageIndex * paginatorRef.pageSize) + (i + 1) }}\n                                            </td>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"district\">\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> District </th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{ element.districtName }} </td>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"block\">\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Block </th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element.blockName}} </td>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"remove\">\n                                            <th mat-header-cell *matHeaderCellDef style=\"width: 130px;\"> Remove </th>\n                                            <td mat-cell *matCellDef=\"let element; let i = index;\">\n                                                <button mat-raised-button class=\"btn-danger\" (click)=\"removeAreaOfOperation(i)\">\n                                                    <i class=\"fas fa-trash\" aria-hidden=\"true\"></i>\n                                                </button>\n                                            </td>\n                                    </ng-container>\n                                    <tr mat-header-row *matHeaderRowDef=\"aooListColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: aooListColumns;\"></tr>\n                                    <tr class=\"mat-row\" *matNoDataRow>\n                                        <td class=\"mat-cell\" colspan=\"4\" style=\"color: red;font-weight: bold;\">No data matching the filter \"{{aooInput.value}}\"</td>\n                                    </tr>\n                                </table>\n                                <mat-paginator #paginatorRef [pageSizeOptions]=\"[5, 10, 25]\"></mat-paginator>\n                            </div>\n    </mat-card-content>\n</mat-card>","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddSupplierComponent } from './supplier/add-supplier/add-supplier.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ViewSupplierListComponent } from './supplier/view-supplier-list/view-supplier-list.component';\nimport { ConfirmReceivedCratesByAhoComponent } from './confirm-received-crates-by-aho/confirm-received-crates-by-aho.component';\nimport { ConfirmedListComponent } from './confirmed-list/confirmed-list.component';\nimport { SupplierFormComponent } from './supplier/supplier-form/supplier-form.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { AddAreaOfOperationComponent } from './supplier/add-area-of-operation/add-area-of-operation.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AreaOfOperationListComponent } from './supplier/area-of-operation-list/area-of-operation-list.component';\nimport { SelectBlocksComponent } from './supplier/select-blocks/select-blocks.component';\nimport { UpdateSupplierComponent } from './supplier/update-supplier/update-supplier.component';\n\n@NgModule({\n  declarations: [\n    AddSupplierComponent, ViewSupplierListComponent, ConfirmReceivedCratesByAhoComponent, \n    ConfirmedListComponent, SupplierFormComponent, AddAreaOfOperationComponent, AreaOfOperationListComponent, SelectBlocksComponent, UpdateSupplierComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdminRoutingModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatStepperModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatIconModule\n  ]\n})\nexport class AdminModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { serverUrl } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupplierService {\n\n\n  constructor(private http: HttpClient) { }\n  getDistrictList(): Observable<any> {\n      return this.http.get(`${serverUrl}/getDistrictList`);\n  }\n  getBlockList(id: any): Observable<any> {\n    return this.http.get(`${serverUrl}/getBlockList/${id}`);\n  }\n  addSupply(data: any): Observable<any> {\n    return this.http.post(`${serverUrl}/supplier/addSupply`, data);    \n  }\n  getAvailableCrateQuantityOfWO(woNo: string): Observable<any> {\n      return this.http.get(`${serverUrl}/supplier/getAvailableCrateQuantityOfWO/${woNo}`);\n  }\n  updateAreaOfSupply(data: any, lotNo: string): Observable<any> {\n      return this.http.put(`${serverUrl}/supplier/updateAreaOfSupply/${lotNo}`, data);\n  }\n  getSupplyList(): Observable<any> {\n    return this.http.get(`${serverUrl}/supplier/getSupplyList`);\n  }\n  getSupplierDetailsByWONo(woNo: any): Observable<any> {\n    return this.http.get(`${serverUrl}/supplier/getSupplierDetailsByWONo/${woNo}`);\n  }}\n","import { HttpClient } from '@angular/common/http';\nimport { serverUrl } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private http: HttpClient,\n    private cookieeService: CookieService\n  ) { }\n  authenticateUser(token: any): Observable<any> {\n    return this.http.post(`${serverUrl}/admin/authenticateUser`, token);\n  }\n  getUserName(): string {\n    return this.cookieeService.get('userName');\n  }\n  getUserCode(): string {\n    return this.cookieeService.get('userCode');\n  }\n  getUserId(): string {\n    return this.cookieeService.get('userId');\n  }\n  getUserRole(): string {\n    return this.cookieeService.get('role');\n  }\n  getDistrictCode(): string {\n    return this.cookieeService.get('districtCode');\n  }\n  getToken(): string {\n    return this.cookieeService.get('token');\n  }\n  isExistToken(): boolean {\n    return this.cookieeService.check('token');\n  }\n  logout(): boolean {\n      this.cookieeService.deleteAll();\n      window.location.href = `${serverUrl}/home.html`;\n      return true;\n  }\n  changePassword(data: any) {\n    return this.http.post(`${serverUrl}/changePassword/`, data);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirmed-list-by-dm',\n  templateUrl: './confirmed-list-by-dm.component.html',\n  styleUrls: ['./confirmed-list-by-dm.component.css']\n})\nexport class ConfirmedListByDmComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>confirmed-list-by-dm works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService\n  ) { }\n  \n  userRole: string = '';\n  userName: string = '';\n  ngOnInit(): void {\n    this.userRole = this.authService.getUserRole();\n    this.userName = this.authService.getUserName();\n  }\n\n}\n","<nav class=\"side-navbar\">\n    <div class=\"side-navbar-wrapper\">\n      <div class=\"sidenav-header d-flex align-items-center justify-content-center\">\n        <div class=\"sidenav-header-inner text-center\"><img src=\"assets/images/26ce8716.png\" alt=\"person\" class=\"img-fluid rounded-circle\">\n          <h2 class=\"h5\">{{ userName }}</h2><span>{{ userRole }}</span>\n        </div>\n        <div class=\"sidenav-header-logo\"><a class=\"brand-small text-center\"> <strong>B</strong><strong class=\"text-primary\">D</strong></a></div>\n      </div>\n      <div class=\"main-menu\">\n        <h5 class=\"sidenav-heading\">Main</h5>\n        <!-- =========  ADMIN ========= -->\n        <ul id=\"side-main-menu\" class=\"side-menu list-unstyled\" *ngIf=\"userRole === 'ADMIN'\">\n          <li routerLinkActive=\"active\"><a href=\"#supplierDropdown\" aria-expanded=\"false\" data-toggle=\"collapse\">\n            <i class=\"icon-user\" aria-hidden=\"true\"></i>Supplier </a>\n            <ul id=\"supplierDropdown\" class=\"collapse list-unstyled \">\n              <li routerLinkActive=\"active\"><a [routerLink]=\"['/admin/addSupplier']\">Add Supplier</a></li>\n              <li routerLinkActive=\"active\"><a [routerLink]=\"['/admin/viewSuppliersList']\">View Suppliers</a></li>\n            </ul>\n          </li>\n          <li routerLinkActive=\"active\"><a [routerLink]=\"['/admin/confirmReceivedCratesByAho']\"> <i class=\"icon-interface-windows\" aria-hidden=\"true\"></i>Received by AHO                             </a></li>\n          <li routerLinkActive=\"active\"><a [routerLink]=\"['/admin/confirmedList']\"> <i class=\"icon-grid\" aria-hidden=\"true\"></i>Confirmed List                             </a></li>\n        </ul>\n        <!-- =========  AHO ========= -->\n        <ul id=\"side-main-menu\" class=\"side-menu list-unstyled\" *ngIf=\"userRole === 'AHO'\">\n          <li routerLinkActive=\"active\"><a [routerLink]=\"['/aho/receiveCrates']\"> <i class=\"icon-home\" aria-hidden=\"true\"></i>Receive Crate                             </a></li>\n          <li routerLinkActive=\"active\"><a [routerLink]=\"['/aho/crateDistribution']\"> <i class=\"icon-grid\" aria-hidden=\"true\"></i>Crate Distribution                             </a></li>\n        </ul>\n        <!-- =========  DM ========= -->\n        <ul id=\"side-main-menu\" class=\"side-menu list-unstyled\" *ngIf=\"userRole === 'DM'\">\n          <li routerLinkActive=\"active\"><a [routerLink]=\"['/dm/confirmReceivedCrates']\"> <i class=\"icon-home\" aria-hidden=\"true\"></i>Confirm Received Crate                             </a></li>\n          <li routerLinkActive=\"active\"><a [routerLink]=\"['/dm/confirmedListByDm']\"> <i class=\"icon-grid\" aria-hidden=\"true\"></i>Confirmed List                             </a></li>\n        </ul>\n        <!-- =========  SUPPLIER ========= -->\n        <ul id=\"side-main-menu\" class=\"side-menu list-unstyled\" *ngIf=\"userRole === 'SUPPLIER'\">\n          <li routerLinkActive=\"active\"><a [routerLink]=\"['/supplier/supplytoBlock']\"> <i class=\"icon-home\" aria-hidden=\"true\"></i>Delivery to Block                             </a></li>\n          <li routerLinkActive=\"active\"><a [routerLink]=\"['/supplier/viewSupplyList']\"> <i class=\"icon-grid\" aria-hidden=\"true\"></i>Delivery Report                             </a></li>\n        </ul>\n      </div>\n      <!-- <div class=\"admin-menu\">\n        <h5 class=\"sidenav-heading\">Second menu</h5>\n        <ul id=\"side-admin-menu\" class=\"side-menu list-unstyled\"> \n          <li> <a href=\"#\"> <i class=\"icon-screen\"> </i>Demo</a></li>\n          <li> <a href=\"#\"> <i class=\"icon-flask\"> </i>Demo\n              <div class=\"badge badge-info\">Special</div></a></li>\n          <li> <a href=\"\"> <i class=\"icon-flask\"> </i>Demo</a></li>\n          <li> <a href=\"\"> <i class=\"icon-picture\"> </i>Demo</a></li>\n        </ul>\n      </div> -->\n    </div>\n</nav>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { SupplierService } from 'src/app/services/supplier.service';\n\n@Component({\n  selector: 'app-supply-to-block',\n  templateUrl: './supply-to-block.component.html',\n  styleUrls: ['./supply-to-block.component.css']\n})\nexport class SupplyToBlockComponent implements OnInit {\n  districtList: any;\n  selectedDistrict: any;\n  blockList: any;\n  supplyForm: any;\n  selection = new SelectionModel(true, []);\n  blockTableColumns: string[] = ['slNo', 'blockCode', 'blockName', \"enterQuantity\"];\n  lotAreaTableColumns: string[] = ['slNo', 'district', 'block', 'quantity', \"remove\"];\n  workOrderNo: any;\n  suplierDetails: any;\n  availableCrate: any;\n  distWiseTotalQuantity: any;\n  lotNo: any;\n  lotArea: any;\n  totalAvailableCrateQuantity: any;\n  selectAreaDiv: any;\n  picker: any;\n\n  @ViewChild(MatSort) sort: any;\n  @ViewChild(MatPaginator) paginator: any;\n  @ViewChild('supplyFormId') el: any;\n  constructor(\n    private service: SupplierService,\n    private toastr: ToastrService,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.selectAreaDiv = false;\n    this.selectedDistrict = '';\n    this.districtList = [];\n    this.lotArea = new MatTableDataSource([]);\n    this.distWiseTotalQuantity = 0;\n    this.suplierDetails = {\n      areaOfOperation: []\n    };\n    this.workOrderNo = this.authService.getUserId();\n    this.loadAvailableCrateQuantityOfWO();\n    this.loadSupplierDetails();\n    this.blockList = new MatTableDataSource([]);\n    this.supplyForm = new FormGroup({\n          workOrderNo: new FormControl('', [Validators.required]),\n          firmName: new FormControl('', [Validators.required]),\n          supplierMobileNo: new FormControl('', [Validators.required]),\n          vehicleNo: new FormControl('', [Validators.required, Validators.pattern(/^[A-Z|a-z]{2}\\s?[0-9]{1,2}\\s?[A-Z|a-z]{0,3}\\s?[0-9]{4}$/)]),\n          vehicleName: new FormControl('', [Validators.required]),\n          deliveryDate: new FormControl('', [Validators.required]),\n          totalQuantity: new FormControl(0, [Validators.required]),\n          invoiceNo: new FormControl('', [Validators.required]),\n          wayBillNo: new FormControl('', [Validators.required]),\n          area: new FormArray([])\n    })\n  }\n  loadBlock() {\n          this.blockList.data = [];\n          const bList: any = [];\n          \n          this.suplierDetails.areaOfOperation.forEach((e: any) => {\n                if(this.selectedDistrict.districtCode === e.districtCode) {\n                  let preValue = this.supplyForm.value['area'][this.supplyForm.value['area'].findIndex((i: any) => i.districtCode === e.districtCode && i.blockCode === e.blockCode )];\n                      bList.push({ \n                        districtCode: e.districtCode, \n                        districtName: e.districtName, \n                        blockCode: e.blockCode, \n                        blockName: e.blockName, \n                        crateQuantity: preValue ? preValue.crateQuantity : ''\n                      });\n                }\n          })\n          this.blockList.data = bList;\n          this.blockList.sort = this.sort;\n          this.blockList.paginator = this.paginator;\n  }\n  onSubmit() {\n        if(this.supplyForm.value['area'].length > 0) {\n              let data = {\n                area: this.supplyForm.value['area'],\n                totalQuantity: this.supplyForm.value['totalQuantity']\n              };\n              this.service.updateAreaOfSupply(data, this.lotNo).subscribe((result: any) => {\n                    this.loadAvailableCrateQuantityOfWO()\n                    this.toastr.success(result.message);\n                    this.supplyForm.get('vehicleNo').reset();\n                    this.supplyForm.get('vehicleName').reset();\n                    this.supplyForm.get('deliveryDate').reset();\n                    this.selectAreaDiv = false;\n                    this.lotNo = '';\n              }, error => this.toastr.error(error.statusText, error.status));\n        } else {\n          this.toastr.error('Plase add minimum 1 district');\n        }\n  }\n  \n  get vehicleNo() { return this.supplyForm.get('vehicleNo'); }\n  get vehicleName() { return this.supplyForm.get('vehicleName'); }\n  get noOfItems() { return this.supplyForm.get('noOfItems'); }\n  get deliveryDate() { return this.supplyForm.get('deliveryDate'); }\n  get invoiceNo() { return this.supplyForm.get('invoiceNo'); }\n  get wayBillNo() { return this.supplyForm.get('wayBillNo'); }\n\n  loadAvailableCrateQuantityOfWO() {\n      this.service.getAvailableCrateQuantityOfWO(this.workOrderNo).subscribe(result => {\n            this.availableCrate = result.availableCrateQuantity;\n            this.totalAvailableCrateQuantity = result.availableCrateQuantity;\n      }, error => this.toastr.error(error.statusText, error.status));\n  }\n  loadSupplierDetails() {\n        this.service.getSupplierDetailsByWONo(this.workOrderNo).subscribe((result: any) => {\n              this.suplierDetails = result;\n              this.suplierDetails.areaOfOperation.forEach((e: any) => {\n                  if(!this.districtList.some((d: any) => d.districtCode === e.districtCode) ) {\n                    this.districtList.push({districtCode: e.districtCode, districtName: e.districtName})\n                  }\n              });\n              this.supplyForm.patchValue({\n                    workOrderNo: this.suplierDetails.workOrderNo,\n                    firmName: this.suplierDetails.firmName,\n                    supplierMobileNo: this.suplierDetails.mobileNo\n              })\n        }, error => this.toastr.error(error.statusText, error.status));\n  }\n  checkCrateQuantity(x: any, index: any) {\n    let total = 0;\n    this.blockList._data._value.forEach((e: any) => {\n            total = total + (e.crateQuantity || 0);\n    })\n    const avl  = this.totalAvailableCrateQuantity - this.supplyForm.value['totalQuantity'] - total;\n    if(avl < 0) {      \n            this.availableCrate = avl + x.crateQuantity;\n            x.crateQuantity = '';\n            this.toastr.error('Can not exceed from total available crate.')\n    } else {\n            this.availableCrate = avl;\n    }\n    this.distWiseTotalQuantity = this.totalAvailableCrateQuantity - this.availableCrate - this.supplyForm.value['totalQuantity'];\n  }\n  addDistrict() {\n    let count = 0;\n    this.blockList._data._value.forEach((e: any) => {\n        const index = this.supplyForm.value['area'].findIndex( (d: any) => d.districtCode === e.districtCode && d.blockCode === e.blockCode );\n        if(e.crateQuantity) {\n          count++;\n          if(index === -1) {\n              this.supplyForm.value['area'].push(e);\n          } else {\n              this.supplyForm.value['area'][index] = e;\n          }\n        } else if(index !== -1) {\n              this.supplyForm.value['area'].splice(index, 1);\n        }\n    });\n    if(count === 0) {\n          this.toastr.error('Please add quantity of minimum one block');\n    } else {\n          this.supplyForm.value['totalQuantity'] = this.supplyForm.value['area'].reduce((a: any, b: any) =>  a + b.crateQuantity, 0 );\n          this.blockList.data = [];\n          this.distWiseTotalQuantity = 0;\n          this.selectedDistrict = '';\n          this.lotArea.data = this.supplyForm.value['area'];\n    }\n  }\n  next() {\n      if(this.supplyForm.valid) {\n            const data = this.supplyForm.value;\n            data.lotNo = this.lotNo;\n            this.service.addSupply(data).subscribe((result: any) => {\n                if(!this.lotNo) {\n                  this.lotNo = result.lotNo;\n                }\n                this.toastr.success(result.message);\n                this.selectAreaDiv = true;\n            }, error => this.toastr.error(error.statusText, error.status))\n      } else {\n            for (const key of Object.keys(this.supplyForm.controls)) {\n                  if (this.supplyForm.controls[key].invalid) {\n                    const invalidControl = this.el.nativeElement.querySelector('[formcontrolname=\"' + key + '\"]');\n                    invalidControl.focus();\n                    invalidControl.blur();\n                    invalidControl.focus();\n                    break;\n                }\n            }\n      }\n  }\n  back() {\n    this.selectAreaDiv = false;\n  }\n  applyAssignedBlockListFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.blockList.filter = filterValue.trim().toLowerCase();\n  }\n  removeArea(index: any) {\n    this.supplyForm.value.area.splice(index, 1);\n    this.lotArea._updateChangeSubscription();\n  }\n}\n","<section>\n    <div class=\"container-fluid\">\n        <mat-card class=\"mat-elevation-z5\">\n            <mat-card-header color=\"primary\">\n                <mat-card-title>Welcome {{ suplierDetails.firmName }}</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-4\">\n                        <strong>Work-Order number : </strong><label>  &nbsp;&nbsp;&nbsp; {{ suplierDetails.workOrderNo }}</label>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <strong>Firm name :</strong><label>  &nbsp;&nbsp;&nbsp; {{ suplierDetails.firmName }}</label>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <strong>PAN no. : </strong><label>  &nbsp;&nbsp;&nbsp; {{ suplierDetails.panNo }}</label>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-4\">\n                        <strong>Crate quantity :</strong><label>  &nbsp;&nbsp;&nbsp; {{ suplierDetails.itemQuantity }}</label>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <strong>GSTN :</strong><label>  &nbsp;&nbsp;&nbsp; {{ suplierDetails.GSTN }}</label>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <strong>Mobile no. :</strong><label>  &nbsp;&nbsp;&nbsp; {{ suplierDetails.mobileNo }}</label>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"form-group col-md-4\">\n                        <strong>Available crate quantity :</strong><label>  &nbsp;&nbsp;&nbsp; {{ totalAvailableCrateQuantity }}</label>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <strong>Area of operation : </strong><label>  &nbsp;&nbsp;&nbsp; {{ suplierDetails.areaOfOperation.length }} blocks of {{ districtList.length }} Districts </label>\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                        <strong>LOT No. : {{ lotNo }}</strong><label>  &nbsp;&nbsp;&nbsp; </label>\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n        <mat-card class=\"mat-elevation-z5\" *ngIf=\"!selectAreaDiv\">\n            <mat-card-header color=\"primary\">\n                <mat-card-title>Enter Delivery details</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <form [formGroup]=\"supplyForm\" #supplyFormId>\n                    <div class=\"row\">\n                        <div class=\"form-group col-6\">\n                            <label for=\"vehicleNo\">Vehicle number <span class=\"asterisk-mark\">*</span>:</label>\n                            <input type=\"text\" class=\"form-control\" id=\"vehicleNo\" placeholder=\"Enter vehicle number\" formControlName='vehicleNo'>\n                            <div *ngIf=\"vehicleNo.invalid && (vehicleNo.dirty || vehicleNo.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"vehicleNo.errors.required\">\n                                    Vehicle number is required.\n                                </div>\n                                <div *ngIf=\"vehicleNo.errors.pattern\">\n                                    VehicleNo number must be numeric/alphabet value or maximum 9 letter.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"vehicleName\">Vehicle name/model <span class=\"asterisk-mark\">*</span>:</label>\n                            <input type=\"text\" class=\"form-control\" id=\"vehicleName\" placeholder=\"Enter model or name of the vehicle\" formControlName='vehicleName'>\n                            <div *ngIf=\"vehicleName.invalid && (vehicleName.dirty || vehicleName.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"vehicleName.errors.required\">\n                                    Vehicle model is required.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group col-6\">\n                            <label for=\"invoiceNo\">Invoice number <span class=\"asterisk-mark\">*</span>:</label>\n                            <input type=\"text\" class=\"form-control\" id=\"invoiceNo\" placeholder=\"Enter invoice number\" formControlName='invoiceNo'>\n                            <div *ngIf=\"invoiceNo.invalid && (invoiceNo.dirty || invoiceNo.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"invoiceNo.errors.required\">\n                                    Invoice number is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"wayBillNo\">Way bill number <span class=\"asterisk-mark\">*</span>:</label>\n                            <input type=\"text\" class=\"form-control\" id=\"wayBillNo\" placeholder=\"Enter way bill number\" formControlName='wayBillNo'>\n                            <div *ngIf=\"wayBillNo.invalid && (wayBillNo.dirty || wayBillNo.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"wayBillNo.errors.required\">\n                                    Way bill is required.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"deliveryDate\">Delivery date <span class=\"asterisk-mark\">*</span>:</label>\n                            <input type=\"date\" class=\"form-control\" id=\"deliveryDate\" placeholder=\"Enter date\" formControlName='deliveryDate'>\n                            <div *ngIf=\"deliveryDate.invalid && (deliveryDate.dirty || deliveryDate.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"deliveryDate.errors.required\">\n                                    Delivery date is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6\">\n                                    <!-- <input class=\"form-control\" matInput [matDatepicker]=\"picker\">\n                                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #picker></mat-datepicker> -->\n                        </div>\n                    </div>\n                </form>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-raised-button (click)=\"next();\"> Next <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i></button>\n            </mat-card-actions>\n        </mat-card>\n        <mat-card class=\"mat-elevation-z5\" *ngIf=\"selectAreaDiv\">\n            <mat-card-header color=\"primary\">\n                <mat-card-title>Select area</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"row\">\n                    <div class=\"form-group col-lg-6\">\n                        <label for=\"district\">District <span class=\"asterisk-mark\">*</span>:</label>\n                        <select class=\"form-control\" id=\"district\" (change)=\"loadBlock();\" [(ngModel)]=\"selectedDistrict\" [ngModelOptions]=\"{standalone: true}\" required>\n                            <option value=\"\" disabled selected>--Select--</option>\n                            <option *ngFor=\"let x of districtList\" [ngValue]=\"x\">{{ x.districtName }}\n                            </option>\n                        </select>\n                    </div>\n\n                    <div class=\"form-group col-lg-2\">\n                    </div>\n                    <div class=\"form-group col-lg-4 text-center\">\n                        <label for=\"district\">Available :</label>\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <strong class=\"l-font\">{{ availableCrate }}</strong><label > &nbsp;crate</label>\n                        \n                    </div>\n                </div>\n                <mat-card class=\"mat-elevation-z5\" *ngIf=\"selectedDistrict\">\n                    <mat-card-header color=\"primary\">\n                        <mat-card-title>Select area</mat-card-title>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div>\n                            <table mat-table [dataSource]=\"blockList\" matSort>\n                                <ng-container matColumnDef=\"slNo\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> SL. </th>\n                                        <td mat-cell *matCellDef=\"let element; let i = index;\"> \n                                            {{ (paginatorRef.pageIndex * paginatorRef.pageSize) + (i + 1) }}\n                                        </td>\n                                        <td mat-footer-cell *matFooterCellDef></td>\n                                </ng-container>\n                                <ng-container matColumnDef=\"blockName\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Block name</th>\n                                        <td mat-cell *matCellDef=\"let element\"> {{element.blockName}} </td>\n                                        <td mat-footer-cell *matFooterCellDef> <strong class=\"l-font\"> Total:</strong> </td>\n                                </ng-container>\n                                <ng-container matColumnDef=\"blockCode\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Block code </th>\n                                        <td mat-cell *matCellDef=\"let element\"> {{element.blockCode}} </td>\n                                        <td mat-footer-cell *matFooterCellDef></td>\n                                </ng-container>\n                                <ng-container matColumnDef=\"enterQuantity\">\n                                        <th mat-header-cell *matHeaderCellDef>Enter quantity </th>\n                                        <td mat-cell *matCellDef=\"let element; let i = index;\">\n                                            <input type=\"number\" class=\"form-control mat-elevation-z3\" style=\"width: 60%;\" [(ngModel)]=\"element.crateQuantity\" (keyup)=\"checkCrateQuantity(element, i)\" placeholder=\"Enter quantity to send {{element.blockName}} block\">\n                                        </td>\n                                        <td mat-footer-cell *matFooterCellDef> \n                                                <br>\n                                                <strong class=\"l-font float-left\">{{ distWiseTotalQuantity }}</strong> \n                                                <button mat-raised-button class=\"btn btn-primary float-right\" (click)=\"addDistrict();\"><i class=\"fas fa-plus\" aria-hidden=\"true\"></i> Add district</button>\n                                                <br><br>\n                                        </td>\n                                </ng-container>                    \n                            \n                                <tr mat-header-row *matHeaderRowDef=\"blockTableColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: blockTableColumns;\"></tr>\n                                <tr mat-footer-row *matFooterRowDef=\"blockTableColumns\"></tr>\n                                <!-- <tr class=\"mat-row\" *matNoDataRow>\n                                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                                </tr> -->\n                            </table>\n                            <mat-paginator #paginatorRef [pageSizeOptions]=\"[5, 10]\" showFirstLastButtons></mat-paginator>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n                <mat-card class=\"mat-elevation-z5\">\n                    <mat-card-header color=\"primary\">\n                        <mat-card-title>Selected areas</mat-card-title>\n                        <input class=\"float-right search-box form-control\" (keyup)=\"applyAssignedBlockListFilter($event)\" matInput placeholder=\"Filter\" #aooInput>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div class=\"text-center\" *ngIf=\"supplyForm.value['area'].length === 0\" style=\"padding: 30px;\">\n                            <strong style=\"color: red;font-size: large;padding: 10px;\">Districts are not added</strong>\n                        </div>\n                        <div *ngIf=\"supplyForm.value['area'].length !== 0\">\n                            <table mat-table [dataSource]=\"lotArea\" matSort>\n                                <ng-container matColumnDef=\"slNo\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> SL </th>\n                                        <td mat-cell *matCellDef=\"let element; let i = index;\"> \n                                            {{ (laPaginatorRef.pageIndex * laPaginatorRef.pageSize) + (i + 1) }}\n                                        </td>\n                                        <td mat-footer-cell *matFooterCellDef></td>\n                                </ng-container>\n                                <ng-container matColumnDef=\"district\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> District </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.districtName}} </td>\n                                    <td mat-footer-cell *matFooterCellDef> </td>\n                                </ng-container>\n                                <ng-container matColumnDef=\"block\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Block </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.blockName}} </td>\n                                    <td mat-footer-cell *matFooterCellDef> <strong class=\"l-font\"> Total quantity:</strong> </td>\n                                </ng-container>\n                                <ng-container matColumnDef=\"quantity\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Quantity </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.crateQuantity}} </td>\n                                    <td mat-footer-cell *matFooterCellDef>\n                                        <strong class=\"l-font float-left\">{{ supplyForm.value['totalQuantity'] }}</strong>\n                                    </td>\n                                </ng-container>\n                                <ng-container matColumnDef=\"remove\">\n                                    <th mat-header-cell *matHeaderCellDef>Remove </th>\n                                    <td mat-cell *matCellDef=\"let element; let i = index;\">\n                                        <button mat-raised-button class=\"btn btn-outline-danger\" (click)=\"removeArea(i)\"><i class=\"fas fa-trash\" aria-hidden=\"true\"></i></button>\n                                    </td>\n                                    <td mat-footer-cell *matFooterCellDef> \n                                        \n                                    </td>\n                                </ng-container>                    \n                            \n                                <tr mat-header-row *matHeaderRowDef=\"lotAreaTableColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: lotAreaTableColumns;\"></tr>\n                                <tr mat-footer-row *matFooterRowDef=\"lotAreaTableColumns\"></tr>\n                                <!-- <tr class=\"mat-row\" *matNoDataRow>\n                                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                                </tr> -->\n                            </table>\n                            <mat-paginator #laPaginatorRef [pageSizeOptions]=\"[5, 10]\" showFirstLastButtons></mat-paginator>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </mat-card-content>\n            <mat-card-actions>\n                <div>\n                    <button mat-raised-button class=\"float-left\" (click)=\"back();\"> <mat-icon>arrow_backward</mat-icon>Previous</button>\n                    <button mat-raised-button class=\"float-right\" type=\"submit\" (click)=\"onSubmit();\"> Final distribution</button>\n                </div>\n                <br>\n            </mat-card-actions>\n        </mat-card>\n        <br>\n        <br>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-sidebar></app-sidebar>\n<div class=\"page\">\n    <app-header></app-header>\n    <!-- <div class=\"breadcrumb-holder\">\n        <div class=\"container-fluid\">\n          <ul class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\"><a href=\"index.html\">Home</a></li>\n            <li class=\"breadcrumb-item active\">Forms       </li>\n          </ul>\n        </div>\n      </div> -->\n    <router-outlet></router-outlet>\n    <br><br><br>\n    <app-footer></app-footer>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { LoginComponent } from './auth/login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [AuthGuard],\n    component: LoginComponent\n  }, {\n    path: 'admin',\n    canActivate: [AuthGuard],\n    redirectTo: 'admin',\n    pathMatch: 'full'\n  }, {\n    path: 'supplier',\n    canActivate: [AuthGuard],\n    redirectTo: 'supplier',\n    pathMatch: 'full'\n  }, {\n    path: 'aho',\n    canActivate: [AuthGuard],\n    redirectTo: 'aho',\n    pathMatch: 'full'\n  }, {\n    path: 'dm',\n    canActivate: [AuthGuard],\n    redirectTo: 'dm',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormArray, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-update-supplier',\n  templateUrl: './update-supplier.component.html',\n  styleUrls: ['./update-supplier.component.css']\n})\nexport class UpdateSupplierComponent implements OnInit {\n\n  constructor(\n    private service: AdminService,\n    private toastr: ToastrService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) { }\n  supplierForm: any;  \n  aoopList: any;\n  showAreaOfOperationDiv: any;\n  @Input() supplierId: any;\n  @Output() backEvent = new EventEmitter<string>();\n  ngOnInit(): void {\n        this.loadSupplierDetails();\n        this.showAreaOfOperationDiv = false;\n\n        this.aoopList = this.formBuilder.group({\n          areaOfOperation : new FormArray([])\n        })\n        this.supplierForm = this.formBuilder.group({\n            workOrderNo : ['', Validators.required],\n            itemQuantity : ['', Validators.required],\n            firmName : ['', Validators.required],\n            emailId : ['', Validators.required],\n            GSTN : ['', Validators.required],\n            panNo : ['', Validators.required],\n            mobileNo : ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n            areaOfOperation : this.formBuilder.array([])\n        })\n  }\n  loadSupplierDetails() {\n      this.service.getSupplierDetails(this.supplierId).subscribe(result => {\n            this.supplierForm.patchValue({\n                  workOrderNo : result.workOrderNo,\n                  itemQuantity : result.itemQuantity,\n                  firmName : result.firmName,\n                  emailId : result.emailId,\n                  GSTN : result.GSTN,\n                  panNo : result.panNo,\n                  mobileNo : result.mobileNo\n            });\n            result.areaOfOperation.forEach((e: any) => {\n                this.aoopList.value['areaOfOperation'].push(e);\n            })\n\n      }, error => this.toastr.error(error.statusText, error.status))\n  }\n  onSubmit() {\n    this.supplierForm.value.areaOfOperation = this.aoopList.value.areaOfOperation;\n\n                  if(this.supplierForm.value.areaOfOperation.length > 0) {\n                      this.service.updateSupplierDetails(this.supplierId, this.supplierForm.value).subscribe((result: any) => {\n                            this.toastr.success(result.message, result.status);\n                            this.backToList();\n                      }, error => this.toastr.error(error.statusText, error.status));\n                  } else {\n                    this.toastr.error('Please add minimum 1 district.');\n                  }\n  }\n\n  next() {\n    if(this.supplierForm.valid) {\n              this.showAreaOfOperationDiv = true;\n    } else {\n          for (const key of Object.keys(this.supplierForm.controls)) {\n                if (this.supplierForm.controls[key].invalid) {\n                  this.toastr.error(\"Enter valid inputs first\", key);\n          //         const invalidControl = this.el.nativeElement.querySelector('[formcontrolname=\"' + key + '\"]');\n          //         invalidControl.focus();\n          //         invalidControl.blur();\n          //         invalidControl.focus();\n                  break;\n              }\n          }\n    }\n  }\n  back() {\n    this.showAreaOfOperationDiv = false;\n  }\n  backToList() {\n      this.backEvent.emit();\n  }\n\n  get areaOfOperation() { return this.supplierForm.get('areaOfOperation').value; }\n\n}\n","<mat-card class=\"mat-elevation-z5\">\n    <mat-card-header color=\"primary\">\n        <mat-card-title>\n            <span *ngIf=\"!showAreaOfOperationDiv\">Update supplier details</span>\n            <span *ngIf=\"showAreaOfOperationDiv\">Update area of operation</span>\n        </mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <app-supplier-form *ngIf=\"!showAreaOfOperationDiv\" [supplierForm]=\"supplierForm\" #fromId></app-supplier-form>\n        <app-add-area-of-operation *ngIf=\"showAreaOfOperationDiv\" [supplierForm]=\"aoopList\"></app-add-area-of-operation>\n    </mat-card-content>\n    <mat-card-actions>\n        <div *ngIf=\"showAreaOfOperationDiv\">\n            <button class=\"float-left\" (click)=\"back();\" mat-raised-button > <mat-icon>arrow_backward</mat-icon>Previous</button>\n            <button class=\"float-right\" type=\"submit\" (click)=\"onSubmit()\" mat-raised-button >Final update supplier details</button>\n        </div>\n        <div *ngIf=\"!showAreaOfOperationDiv\">\n            <button class=\"float-left\" (click)=\"backToList();\" mat-raised-button > <mat-icon>arrow_backward</mat-icon>Back to List</button>\n            <button class=\"float-right\" mat-raised-button (click)=\"next();\"> Next<mat-icon>arrow_forward</mat-icon></button>\n        </div>\n        \n        <br>\n    </mat-card-actions>\n</mat-card>","import { Component, Input, OnInit, ViewChild } from '@angular/core';\n@Component({\n  selector: 'app-add-area-of-operation',\n  templateUrl: './add-area-of-operation.component.html',\n  styleUrls: ['./add-area-of-operation.component.css']\n})\nexport class AddAreaOfOperationComponent implements OnInit {\n\n  constructor(\n  ) { }\n  @Input() supplierForm: any;\n  @ViewChild('listComponent') listComponent: any;\n  ngOnInit(): void {\n  }\n\n  updateTable = () => {\n    this.listComponent.updateTable()\n  }\n\n}\n","\n<app-select-blocks [supplierForm]=\"supplierForm\" (newItemEvent)=\"updateTable()\"></app-select-blocks>\n<app-area-of-operation-list [supplierForm]=\"supplierForm\" #listComponent></app-area-of-operation-list>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}